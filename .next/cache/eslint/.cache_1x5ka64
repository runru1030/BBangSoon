[{"/Users/jihyeon/Documents/project/BBangSoon/src/app/GlobalProvider.tsx":"1","/Users/jihyeon/Documents/project/BBangSoon/src/app/ReactQueryProvider.tsx":"2","/Users/jihyeon/Documents/project/BBangSoon/src/app/RootStyleRegistry.tsx":"3","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/kakao/route.ts":"4","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/route.ts":"5","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/utils/KakaoAuth.ts":"6","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/utils/util.ts":"7","/Users/jihyeon/Documents/project/BBangSoon/src/app/auth/login/page.tsx":"8","/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/components/EditForm.tsx":"9","/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/components/HeaderCmp.tsx":"10","/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/components/Review.tsx":"11","/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/page.tsx":"12","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/PageContent.tsx":"13","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/components/Ranking.tsx":"14","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/components/SearchStore.tsx":"15","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/page.tsx":"16","/Users/jihyeon/Documents/project/BBangSoon/src/app/layout.tsx":"17","/Users/jihyeon/Documents/project/BBangSoon/src/app/loading.tsx":"18","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/PageContent.tsx":"19","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/components/Header.tsx":"20","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/components/MapSection.tsx":"21","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/components/SearchSection.tsx":"22","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/page.tsx":"23","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/PageContent.tsx":"24","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/StoreInfoProvider.tsx":"25","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/Header.tsx":"26","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/ImgGridContainer.tsx":"27","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/ImgViewer.tsx":"28","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/MapInfo.tsx":"29","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/MenuInfo.tsx":"30","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/Review.tsx":"31","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/ReviewForm.tsx":"32","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/StoreInfo.tsx":"33","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/page.tsx":"34","/Users/jihyeon/Documents/project/BBangSoon/src/app/wish/page.tsx":"35","/Users/jihyeon/Documents/project/BBangSoon/src/components/Grid.tsx":"36","/Users/jihyeon/Documents/project/BBangSoon/src/components/Header.tsx":"37","/Users/jihyeon/Documents/project/BBangSoon/src/components/ImgModal.tsx":"38","/Users/jihyeon/Documents/project/BBangSoon/src/components/LoadingScreen.tsx":"39","/Users/jihyeon/Documents/project/BBangSoon/src/components/LocList.tsx":"40","/Users/jihyeon/Documents/project/BBangSoon/src/components/Map.tsx":"41","/Users/jihyeon/Documents/project/BBangSoon/src/components/Nav.tsx":"42","/Users/jihyeon/Documents/project/BBangSoon/src/components/Notice.tsx":"43","/Users/jihyeon/Documents/project/BBangSoon/src/components/Review.tsx":"44","/Users/jihyeon/Documents/project/BBangSoon/src/components/ReviewList.tsx":"45","/Users/jihyeon/Documents/project/BBangSoon/src/components/StarCmp.tsx":"46","/Users/jihyeon/Documents/project/BBangSoon/src/components/StoreImg.tsx":"47","/Users/jihyeon/Documents/project/BBangSoon/src/components/StoreItem.tsx":"48","/Users/jihyeon/Documents/project/BBangSoon/src/components/hooks/useAuth.ts":"49","/Users/jihyeon/Documents/project/BBangSoon/src/components/hooks/useAuthKakao.ts":"50","/Users/jihyeon/Documents/project/BBangSoon/src/components/hooks/useGeoLocation.ts":"51","/Users/jihyeon/Documents/project/BBangSoon/src/lib/apis/AuthUsersApis.ts":"52","/Users/jihyeon/Documents/project/BBangSoon/src/lib/apis/ReviewsApis.ts":"53","/Users/jihyeon/Documents/project/BBangSoon/src/lib/apis/Stores.ts":"54","/Users/jihyeon/Documents/project/BBangSoon/src/styles/styled.d.tsx":"55","/Users/jihyeon/Documents/project/BBangSoon/src/styles/theme.tsx":"56","/Users/jihyeon/Documents/project/BBangSoon/src/utils/KakaoLocalAPI.tsx":"57"},{"size":827,"mtime":1687941032876,"results":"58","hashOfConfig":"59"},{"size":641,"mtime":1687941036546,"results":"60","hashOfConfig":"59"},{"size":971,"mtime":1677028752348,"results":"61","hashOfConfig":"59"},{"size":1292,"mtime":1687941041346,"results":"62","hashOfConfig":"59"},{"size":1041,"mtime":1687941097154,"results":"63","hashOfConfig":"59"},{"size":1168,"mtime":1687856755559,"results":"64","hashOfConfig":"59"},{"size":456,"mtime":1687940980023,"results":"65","hashOfConfig":"59"},{"size":2840,"mtime":1678112838791,"results":"66","hashOfConfig":"59"},{"size":3601,"mtime":1687941122455,"results":"67","hashOfConfig":"59"},{"size":3841,"mtime":1678005508569,"results":"68","hashOfConfig":"59"},{"size":1187,"mtime":1687941195762,"results":"69","hashOfConfig":"59"},{"size":2406,"mtime":1687691046382,"results":"70","hashOfConfig":"59"},{"size":1289,"mtime":1687690865606,"results":"71","hashOfConfig":"59"},{"size":2289,"mtime":1687763348352,"results":"72","hashOfConfig":"59"},{"size":2594,"mtime":1687763879842,"results":"73","hashOfConfig":"59"},{"size":213,"mtime":1678005799339,"results":"74","hashOfConfig":"59"},{"size":929,"mtime":1687941207844,"results":"75","hashOfConfig":"59"},{"size":122,"mtime":1678110528167,"results":"76","hashOfConfig":"59"},{"size":886,"mtime":1687763828891,"results":"77","hashOfConfig":"59"},{"size":805,"mtime":1678012508677,"results":"78","hashOfConfig":"59"},{"size":1842,"mtime":1687941219517,"results":"79","hashOfConfig":"59"},{"size":3210,"mtime":1687941238357,"results":"80","hashOfConfig":"59"},{"size":214,"mtime":1678011768022,"results":"81","hashOfConfig":"59"},{"size":620,"mtime":1687690865608,"results":"82","hashOfConfig":"59"},{"size":1605,"mtime":1687941249552,"results":"83","hashOfConfig":"59"},{"size":3110,"mtime":1687763494224,"results":"84","hashOfConfig":"59"},{"size":3308,"mtime":1687856201304,"results":"85","hashOfConfig":"59"},{"size":1008,"mtime":1687690865609,"results":"86","hashOfConfig":"59"},{"size":2005,"mtime":1687690865611,"results":"87","hashOfConfig":"59"},{"size":1338,"mtime":1687941271174,"results":"88","hashOfConfig":"59"},{"size":1803,"mtime":1687941277170,"results":"89","hashOfConfig":"59"},{"size":6590,"mtime":1687941294951,"results":"90","hashOfConfig":"59"},{"size":2166,"mtime":1687690865613,"results":"91","hashOfConfig":"59"},{"size":461,"mtime":1687690865614,"results":"92","hashOfConfig":"59"},{"size":1348,"mtime":1687691031002,"results":"93","hashOfConfig":"59"},{"size":682,"mtime":1638622225982,"results":"94","hashOfConfig":"59"},{"size":718,"mtime":1638621229206,"results":"95","hashOfConfig":"59"},{"size":1703,"mtime":1687769021144,"results":"96","hashOfConfig":"59"},{"size":525,"mtime":1678111019889,"results":"97","hashOfConfig":"59"},{"size":1670,"mtime":1678007812881,"results":"98","hashOfConfig":"59"},{"size":3926,"mtime":1687941327978,"results":"99","hashOfConfig":"59"},{"size":2664,"mtime":1687690865614,"results":"100","hashOfConfig":"59"},{"size":3616,"mtime":1687941365125,"results":"101","hashOfConfig":"59"},{"size":2394,"mtime":1687691063317,"results":"102","hashOfConfig":"59"},{"size":2676,"mtime":1687855879679,"results":"103","hashOfConfig":"59"},{"size":857,"mtime":1687766388771,"results":"104","hashOfConfig":"59"},{"size":1628,"mtime":1687941378879,"results":"105","hashOfConfig":"59"},{"size":1850,"mtime":1687690865615,"results":"106","hashOfConfig":"59"},{"size":1242,"mtime":1687690865615,"results":"107","hashOfConfig":"59"},{"size":2276,"mtime":1687159077600,"results":"108","hashOfConfig":"59"},{"size":1273,"mtime":1687160664041,"results":"109","hashOfConfig":"59"},{"size":924,"mtime":1687855400052,"results":"110","hashOfConfig":"59"},{"size":1103,"mtime":1687855495390,"results":"111","hashOfConfig":"59"},{"size":1229,"mtime":1687855400052,"results":"112","hashOfConfig":"59"},{"size":190,"mtime":1633275604147,"results":"113","hashOfConfig":"59"},{"size":186,"mtime":1633276697116,"results":"114","hashOfConfig":"59"},{"size":2964,"mtime":1687763842529,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5xb3u9",{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},"/Users/jihyeon/Documents/project/BBangSoon/src/app/GlobalProvider.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/ReactQueryProvider.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/RootStyleRegistry.tsx",[],["320"],"/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/kakao/route.ts",["321","322"],[],"import { strapiAuthUsersApi } from \"@lib/apis/AuthUsersApis\";\nimport KakaoAuth from \"../utils/KakaoAuth\";\nimport { jwtUtil } from \"../utils/util\";\n\nexport async function PUT(req: Request) {\n  try {\n    const { access_token } = await req.json();\n\n    if (!access_token)\n      return new Response(\"token 없음.\", {\n        status: 401,\n      });\n\n    const result: any = await KakaoAuth.getProfile(access_token);\n    const kakaoUser = JSON.parse(result).kakao_account;\n    const userInfo = {\n      email: kakaoUser.email,\n      userName: kakaoUser.profile.nickname,\n      id: -1,\n    };\n\n    // const { attributes } = await strapiAuthUsersApi.getUser(userInfo.email);\n    const attributes = {\n      id: 8,\n    };\n    userInfo.id = attributes.id;\n\n    if (!attributes) {\n      const { attributes: created_attributes } =\n        await strapiAuthUsersApi.createUser({\n          userInfo,\n          kakaoToken: access_token,\n        });\n      userInfo.id = created_attributes.id;\n    }\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        jwt: jwtUtil.getJWTToken(userInfo),\n        user: { ...userInfo },\n      }),\n      {\n        status: !attributes ? 201 : 200,\n      }\n    );\n  } catch (err: any) {\n    return new Response(\"test\", {\n      status: 500,\n    });\n  }\n}\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/route.ts",["323"],[],"import { jwtUtil } from \"./utils/util\";\n\nexport async function GET(req: Request) {\n  try {\n    if (!req.headers.get(\"authorization\"))\n      return new Response(\"token 없음.\", {\n        status: 401,\n      });\n\n    const jwtUser = jwtUtil.getJWTUser(\n      req.headers.get(\"authorization\") as string\n    );\n    const userInfo = {\n      email: (jwtUser as { email: string; userName: string }).email,\n      userName: (jwtUser as { email: string; userName: string }).userName,\n      id: -1,\n    };\n    // const { attributes } = await strapiAuthUsersApi.getUser(userInfo.email);\n    const attributes = {\n      id: 8,\n    };\n    userInfo.id = attributes.id;\n\n    if (!attributes)\n      return new Response(\"user 없음.\", {\n        status: 404,\n      });\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        jwt: jwtUtil.getJWTToken(userInfo),\n        user: { ...userInfo },\n      }),\n      {\n        status: 200,\n      }\n    );\n  } catch (err: any) {\n    return new Response(\"test\", {\n      status: 500,\n    });\n  }\n}\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/utils/KakaoAuth.ts",["324","325","326","327"],[],"import request from \"request\";\n\nexport default {\n  getProfile(accessToken: string) {\n    return new Promise((resolve, reject) => {\n      request(\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n          },\n          url: \"https://kapi.kakao.com/v2/user/me\",\n           method: \"GET\",\n        },\n        (error: any, response: any, body: any) => {\n          if (!error && response.statusCode === 200) {\n            resolve(body);\n          }\n          reject(error);\n        }\n      );\n    });\n  },\n  // logout(accessToken) {\n  //   console.log(accessToken);\n  //   return new Promise((resolve, reject) => {\n  //     request(\n  //       {\n  //         headers: {\n  //           Authorization: `Bearer ${accessToken}`,\n  //         },\n  //         url: \"https://kapi.kakao.com/v1/user/logout\",\n  //         method: \"POST\",\n  //       },\n  //       (error, response, body) => {\n  //         if (!error && response.statusCode === 200) {\n  //           resolve(body);\n  //         }\n  //         reject(error);\n  //       }\n  //     );\n  //   });\n  // },\n};\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/api/auth/utils/util.ts",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/auth/login/page.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/components/EditForm.tsx",["328","329"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport axios from \"axios\";\nimport { useAtom } from \"jotai\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface props {\n  setEditNick: React.Dispatch<React.SetStateAction<boolean>>;\n  onClickEditNick: React.MouseEventHandler<HTMLSpanElement>;\n}\nconst EditForm: React.FC<props> = ({ setEditNick, onClickEditNick }) => {\n  const [userAtom, setUserAtom] = useAtom(userInfoAtoms.userAtom);\n\n  /* 닉네임 변경 */\n  const [newNick, setNewNick] = useState({\n    userName: \"\",\n    valid: false,\n    error: \"\",\n  } as { userName: string; valid: boolean; error: string });\n\n  const onChangeNick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const valNick = /\\s/g;\n    if (valNick.test(event.target.value)) {\n      setNewNick({\n        userName: event.target.value,\n        valid: false,\n        error: \"사용 불가\",\n      });\n    } else {\n      setNewNick({\n        userName: event.target.value,\n        valid: true,\n        error: \"사용 가능\",\n      });\n    }\n  };\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    try {\n      if (newNick.userName == \"\" || !newNick.valid) {\n        throw new Error(\"조건을 확인 해주세요.\");\n      }\n      axios\n        .patch(`/user/userName/${userAtom.id}/${newNick.userName}`)\n        .then((res) => {\n          res.status == 200 &&\n            setUserAtom({ ...userAtom, userName: newNick.userName });\n          setEditNick(false);\n          setNewNick({ userName: \"\", valid: false, error: \"\" });\n        });\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        alert(error.message);\n      }\n    }\n  };\n\n  return (\n    <Container className=\"container\" valid={newNick.valid}>\n      <Wrapper className=\"col-container\">\n        <img src=\"bread.png\" width=\"50px\" />\n        <span>닉네임 변경</span>\n        <Form\n          valid={newNick.valid}\n          className=\"col-container\"\n          onSubmit={onSubmit}\n        >\n          {<span id=\"valid\">{newNick.error}</span>}\n          <input\n            type=\"text\"\n            value={newNick.userName}\n            onChange={onChangeNick}\n            placeholder={userAtom.userName + \"(10자 이하, 공백불가)\"}\n            maxLength={10}\n          />\n          <div className=\"row-container\">\n            <input type=\"submit\" value=\"수정\" />\n            <span onClick={onClickEditNick} id=\"quit\">\n              취소\n            </span>\n          </div>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\nexport default EditForm;\nconst Wrapper = styled.div`\n  margin-top: 200px;\n  background-color: white;\n  padding: 30px 50px;\n  align-items: center;\n  border-radius: 20px;\n  border: solid thin ${(props) => props.theme.color.blue};\n`;\nconst Container = styled.div<{ valid: boolean }>`\n  position: absolute;\n  z-index: 99;\n  background-color: #2b2b2b71;\n  width: 100%;\n  height: 100vh;\n`;\nconst Form = styled.form<{ valid: boolean }>`\n  margin-top: 30px;\n  align-items: center;\n  input[type=\"text\"] {\n    width: 100%;\n    border: solid thin\n      ${(props) =>\n        props.valid ? props.theme.color.blue : props.theme.color.red};\n    border-radius: 5px;\n    margin-bottom: 30px;\n    padding: 10px 15px;\n  }\n  input[type=\"submit\"] {\n    all: unset;\n    color: #46a6ff;\n  }\n  > div {\n    gap: 20px;\n  }\n  #quit {\n    color: grey;\n  }\n  #valid {\n    color: ${(props) =>\n      props.valid ? props.theme.color.blue : props.theme.color.red};\n    font-size: small;\n    margin-bottom: 20px;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/components/HeaderCmp.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/components/Review.tsx",["330","331","332","333","334"],[],"import { Grid } from \"@components/Grid\";\nimport { useRouter } from \"next/navigation\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { reviewType } from \"../page\";\n\ninterface props {\n  reviewArr: reviewType[];\n}\nconst Review: React.FC<props> = ({ reviewArr }) => {\n  const rptier = useRouter();\n\n  /* 방문 일지 */\n  const onClickReview = (review: reviewType) => {\n    // dispatch(setReviewInfo(review));\n    rptier.push(\"/feed/review\");\n  };\n\n  return (\n    <Grid isFeed>\n      {reviewArr.map((review: reviewType) => (\n        <Wrapper onClick={() => onClickReview(review)} key={review.id}>\n          {review.reviewImg ? (\n            <ReviewWrapper className=\"container\">\n              <img src={review.reviewImg} />\n            </ReviewWrapper>\n          ) : (\n            <ReviewWrapper className=\"container\">\n              <img src=\"bread.png\" id=\"bread\" />\n            </ReviewWrapper>\n          )}\n        </Wrapper>\n      ))}\n    </Grid>\n  );\n};\nexport default Review;\nconst Wrapper = styled.div``;\nconst ReviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/feed/page.tsx",["335","336","337"],[],"\"use client\";\nimport { userInfoAtoms } from \"@app/GlobalProvider\";\nimport axios from \"axios\";\nimport { useAtomValue } from \"jotai\";\nimport { useRouter } from \"next/navigation\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../../components/Nav\";\n// import StoreList, { StrapiStoreType } from \"../../components/StoreItem\";\nimport HeaderCmp from \"./components/HeaderCmp\";\nimport Review from \"./components/Review\";\nimport { StrapiStoreType } from \"@app/store/[storeId]/StoreInfoProvider\";\n\nexport interface reviewType {\n  id: number;\n  star: number;\n  content: string;\n  date: Date;\n  reviewImg: string | null;\n  StoreId: number;\n}\nconst Page = () => {\n  const router = useRouter();\n  const userAtom = useAtomValue(userInfoAtoms.userAtom);\n  const [reviewArr, setReviewArr] = useState<reviewType[]>([]); //유저의 리뷰arr\n\n  /* 순례 리스트 */\n  const [isDetailVisit, setIsDetailVisit] = useState(false);\n  const [visitId, setVisitId] = useState<number[]>([]); //유저의 순례리스트 매장 ID\n  const [visitArr, setVisitArr] = useState<StrapiStoreType[]>([]); //유저의 순례리스트 매장\n\n  /* 순례 리스트 */\n  const onClickHandler = (event: React.MouseEvent): void => {\n    event.currentTarget.id == \"visit\"\n      ? axios.post(`/store/list`, visitId).then((res) => {\n          setVisitArr(res.data);\n          setIsDetailVisit(true);\n        })\n      : setIsDetailVisit(false);\n  };\n\n  useEffect(() => {\n    //로그인 처리\n    !userAtom.id && router.push(\"/auth/login\");\n    axios.get(`/user/feed/${userAtom.id}`).then((res) => {\n      setReviewArr(res.data.Reviews);\n      setVisitId(res.data.Visits.map((it: { StoreId: number }) => it.StoreId));\n    });\n  }, []);\n\n  return (\n    <>\n      <HeaderCmp\n        reviewArr={reviewArr}\n        visitCnt={visitId.length}\n        onClickHandler={onClickHandler}\n      />\n      <Label>{isDetailVisit ? \"순례 리스트\" : \"방문 일지\"}</Label>\n      {/* {isDetailVisit ? (\n        visitArr.map((store: StrapiStoreType) => <StoreList store={store} />)\n      ) : (\n        <Review reviewArr={reviewArr} />\n      )} */}\n      <Nav />\n    </>\n  );\n};\nexport default Page;\nconst Label = styled.div`\n  font-size: medium;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  box-sizing: border-box;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/PageContent.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/home/components/Ranking.tsx",["338","339","340","341","342"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport axios from \"axios\";\nimport { useAtomValue } from \"jotai\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StoreList from \"../../../components/StoreItem\";\ninterface rankingState {\n  id: number;\n  place_name: string;\n  reviewCnt: number;\n  avgStar: number;\n  totalStar: number;\n}\nconst Ranking: React.FC = () => {\n  /* location */\n  const location = useAtomValue(userInfoAtoms.locationAtom);\n\n  /* ranking */\n  const colorList = [\"#FF764A\", \"#46A6FF\", \"#46A6FF\"]; //ranking num's color\n  const [reviewRank, setReviewRank] = useState<rankingState[]>([]); //ranking top 20's store Arr\n  const [isMore, setIsMore] = useState(false);\n  const onClickMore = () => {\n    setIsMore(true);\n  };\n\n  useEffect(() => {\n    //위치기준 랭킹 top 20\n    // axios.get(`/store/rankReview/${location?.si}`).then((res) => {\n    //   setReviewRank(res.data);\n    // });\n  }, [location]);\n\n  return (\n    <Wrapper className=\"col-container\">\n      <Label>랭킹</Label>\n      {reviewRank.map(\n        (store: rankingState, idx: number) =>\n          (idx < 10 || isMore) && (\n            <>\n              <div className=\"row-container\">\n                {/* <StoreList store={store}>\n                  <RankNum color={idx < 3 ? colorList[idx] : \"black\"}>\n                    {idx + 1}\n                  </RankNum>\n                </StoreList> */}\n              </div>\n              {idx == 9 && !isMore && (\n                <Button onClick={onClickMore}>더보기</Button>\n              )}\n            </>\n          )\n      )}\n    </Wrapper>\n  );\n};\nexport default Ranking;\nconst RankNum = styled.span`\n  font-size: large;\n  margin-left: 20px;\n  color: ${(props) => props.color};\n`;\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-right: 0;\n  margin-bottom: 100px;\n`;\nconst Button = styled.button`\n  align-items: center;\n  width: 100%;\n  text-align: center;\n  flex: 1;\n  border-top: ${(props) => `solid thin` + props.theme.color.border_grey};\n  padding: 10px 0;\n  font-size: small;\n`;\nconst Label = styled.div`\n  font-size: medium;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  border-bottom: solid thin #eeeeee;\n  width: 100%;\n  box-sizing: border-box;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/components/SearchStore.tsx",["343"],[],"import StoreItem from \"@components/StoreItem\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from \"clsx\";\nimport { FormEvent, useState } from \"react\";\nimport { getStore } from \"src/utils/KakaoLocalAPI\";\nimport styled from \"styled-components\";\nimport { resultState } from \"../PageContent\";\nconst SearchStore = () => {\n  const [resultArr, setResultArr] = useState<resultState[]>([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResultInfo, setSearchResultInfo] = useState({\n    isEnd: true,\n    currPage: 1,\n  });\n  const getStoreKakao = (page: number) => {\n    getStore(page, resultArr, search).then((res: any) => {\n      setSearchResultInfo((p) => ({\n        isEnd: res.isEnd,\n        currPage: p.currPage + 1,\n      }));\n      setResultArr(res.resultArr);\n      // getStoreList(res.resultArr, setResultArr);\n    });\n  };\n\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setResultArr([]);\n    getStoreKakao(1);\n  };\n  return (\n    <div className=\"relative\">\n      <form\n        onSubmit={onSubmit}\n        className=\"flex items-center px-3 py-6 relative\"\n      >\n        <input\n          type=\"text\"\n          value={search}\n          onChange={({ target }) => {\n            setSearch(target.value);\n            if (target.value === \"\") setResultArr([]);\n          }}\n          placeholder=\"매장 검색\"\n          className=\"general-input border w-full border-blue \"\n        />\n        <button\n          type=\"submit\"\n          className=\"absolute right-6 text-blue\"\n          disabled={search === \"\"}\n        >\n          <FontAwesomeIcon icon={faSearch} />\n        </button>\n      </form>\n\n      <div\n        className={clsx(\n          \"w-full mb-[100px] absolute bg-white\",\n          resultArr.length === 0 ? \"hidden\" : \"visible\"\n        )}\n      >\n        <div>\n          {resultArr.map((result: resultState) => (\n            <StoreItem store={result} key={result.id} />\n          ))}\n        </div>\n        {!searchResultInfo.isEnd && (\n          <Button onClick={() => getStoreKakao(searchResultInfo.currPage)}>\n            더 보기\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default SearchStore;\n\nexport const Form = styled.form`\n  margin: 20px 0;\n  justify-content: center;\n`;\n\nconst Button = styled.button`\n  align-items: center;\n  width: 100%;\n  height: 32px;\n  text-align: center;\n  flex: 1;\n  border-top: ${(props) => `solid thin` + props.theme.color.border_grey};\n  padding: 10px 0;\n  font-size: small;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/home/page.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/layout.tsx",["344","345"],[],"import React from \"react\";\nimport \"src/styles/globals.css\";\nimport GlobalProvider from \"./GlobalProvider\";\nimport ReactQueryProvider from \"./ReactQueryProvider\";\nimport RootStyleRegistry from \"./RootStyleRegistry\";\n\nexport default async function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"ko\">\n      <head>\n        <link rel=\"shortcut icon\" href=\"/favicon.png\" />\n        <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\n        <script\n          type=\"text/javascript\"\n          src={`https://dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.NEXT_PUBLIC_KAKAO_JS_KEY}`}\n        ></script>\n        <title>BBangSoon</title>\n      </head>\n      <body>\n        <ReactQueryProvider>\n          <RootStyleRegistry>\n            <GlobalProvider>{children}</GlobalProvider>\n          </RootStyleRegistry>\n        </ReactQueryProvider>\n      </body>\n    </html>\n  );\n}\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/loading.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/map/PageContent.tsx",["346"],[],"\"use client\";\nimport { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { atom, useAtomValue, useSetAtom } from \"jotai\";\nimport { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport MapSection from \"./components/MapSection\";\nimport SearchSection from \"./components/SearchSection\";\n\nexport interface kakaoLocation {\n  title: string;\n  y: number;\n  x: number;\n}\nexport const mapLocationAtom = atom<kakaoLocation>({\n  title: \"\",\n  y: 0,\n  x: 0,\n});\n\nconst PageContent = () => {\n  const location = useAtomValue(userInfoAtoms.locationAtom);\n  const setMapLocation = useSetAtom(mapLocationAtom);\n\n  useEffect(() => {\n    setMapLocation({ title: \"\", x: location.x, y: location.y });\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className=\"relative\">\n        <MapSection />\n        <SearchSection />\n      </div>\n    </>\n  );\n};\nexport default PageContent;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/components/Header.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/map/components/MapSection.tsx",["347","348","349"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { StrapiStoreType } from \"@app/store/[storeId]/StoreInfoProvider\";\nimport Map from \"@components/Map\";\nimport StoreList from \"@components/StoreItem\";\nimport { strapiStoresApi } from \"@lib/apis/Stores\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useAtom, useAtomValue } from \"jotai\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { mapLocationAtom } from \"../PageContent\";\n\nconst MapSection = () => {\n  const location = useAtomValue(userInfoAtoms.locationAtom);\n  const [mapLocation, setMapLocation] = useAtom(mapLocationAtom);\n\n  const [storeArr, setStoreArr] = useState<StrapiStoreType[]>([]);\n\n  useQuery([\"getNearbyStores\"], {\n    queryFn: async () => {\n      return await strapiStoresApi.getNearbyStores({\n        curr_x: mapLocation.x,\n        curr_y: mapLocation.y,\n      });\n    },\n    onSuccess: (res: any) => {\n      setStoreArr(res.data);\n    },\n    onError: (err: any) => {\n      console.error(err);\n    },\n    retry: false,\n    enabled: mapLocation.x !== 0,\n  });\n\n  return (\n    <>\n      <Map\n        loc={mapLocation}\n        setLoc={setMapLocation}\n        curLoc={{\n          title: \"\",\n          y: location.y,\n          x: location.x,\n        }}\n        markerArr={storeArr}\n      />\n      <ScrollDiv className=\"col-container\">\n        {storeArr.map((store) => (\n          <StoreList store={store} key={store.id} />\n        ))}\n        {storeArr.length === 0 && <span>지역 오픈 준비중</span>}\n      </ScrollDiv>\n    </>\n  );\n};\nexport default MapSection;\n\nconst MoreBtn = styled.button`\n  all: unset;\n  color: #46a6ff;\n  text-align: center;\n  width: 100%;\n`;\nconst ScrollDiv = styled.div`\n  overflow: scroll;\n  padding-bottom: 100px;\n  width: 100%;\n  height: 100%;\n  max-height: 100vh;\n  overflow: auto;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/components/SearchSection.tsx",["350","351"],[],"import { resultState } from \"@app/home/PageContent\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport { atom, useAtom, useSetAtom } from \"jotai\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { mapLocationAtom } from \"../PageContent\";\n\nconst serachEventAtom = atom<{ isSerachMode: boolean }>({\n  isSerachMode: false,\n});\n\nconst SearchSection = () => {\n  const setMapLocation = useSetAtom(mapLocationAtom);\n  const [serachEvent, setSerachEvent] = useAtom(serachEventAtom);\n  const [search, setSearch] = useState(\"\");\n  const [addressList, setAddressList] = useState<resultState[]>([]); //위치 검색 결과 arr\n\n  const onClickResult = (store: resultState) => {\n    setMapLocation({\n      title: store.name,\n      y: store.loc_y || 0,\n      x: store.loc_x || 0,\n    });\n    setAddressList([]);\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    axios\n      .get(\n        `https://dapi.kakao.com/v2/local/search/keyword.json?query=${search}`,\n        {\n          headers: {\n            Authorization: `KakaoAK ${process.env.NEXT_PUBLIC_KAKAO_REST_KEY}`,\n          },\n          params: { size: 15 },\n        }\n      )\n      .then((res) => {\n        setAddressList(res.data.documents);\n      });\n    // setSerachEvent({ isSerachMode: false });\n  };\n\n  return (\n    <div\n      className={clsx(\n        !serachEvent.isSerachMode ? \"hidden\" : \"visible\",\n        \"absolute top-0 z-10 w-full\"\n      )}\n    >\n      <form\n        onSubmit={onSubmit}\n        className=\"flex items-center px-3 py-6 relative w-full\"\n      >\n        <input\n          type=\"text\"\n          value={search}\n          placeholder=\"위치 검색\"\n          onChange={(event) => setSearch(event.target.value)}\n          className=\"general-input border w-full border-blue \"\n        />\n        <button\n          type=\"submit\"\n          className=\"absolute right-6 text-blue\"\n          disabled={search === \"\"}\n        >\n          <FontAwesomeIcon icon={faSearch} />\n        </button>\n      </form>\n\n      <div\n        className={clsx(\n          addressList.length === 0 ? \"hidden\" : \"visible\",\n          \"absolute bg-white w-full\"\n        )}\n      >\n        {addressList.map((store: resultState, idx: number) => (\n          <div\n            id={store.id + \"\"}\n            key={store.id}\n            onClick={() => onClickResult(store)}\n            className=\"w-full flex items-center p-5 h-8 border-t border-gray-1000\"\n          >\n            {store.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nconst SerachBtn = () => {\n  const [serachEvent, setSerachEvent] = useAtom(serachEventAtom);\n  return (\n    <StyledButton\n      onClick={() => {\n        setSerachEvent({ isSerachMode: !serachEvent.isSerachMode });\n      }}\n    >\n      위치 검색\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button`\n  all: unset;\n  font-size: x-small;\n  font-weight: normal;\n  flex: 1;\n  text-align: end;\n  color: ${(props) => props.theme.color.blue};\n`;\n\nSearchSection.triggerBtn = SerachBtn;\nexport default SearchSection;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/map/page.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/PageContent.tsx",["352","353"],[],"\"use client\";\nimport { atom } from \"jotai\";\nimport ImgViewer from \"./components/ImgViewer\";\nimport MapInfo from \"./components/MapInfo\";\nimport MenuInfo from \"./components/MenuInfo\";\nimport Review from \"./components/Review\";\nimport StoreInfo from \"./components/StoreInfo\";\nimport { StrapiStoreType } from \"./StoreInfoProvider\";\n\nexport const openedStoreInfoAtom = atom<\"map\" | \"detail\" | \"menu\" | \"review\">(\n  \"detail\"\n);\n\nconst PageContent = () => {\n  return (\n    <div>\n      <ImgViewer />\n      <StoreInfo />\n      <MapInfo />\n      {/* <MenuInfo /> */}\n      <Review />\n    </div>\n  );\n};\nexport default PageContent;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/StoreInfoProvider.tsx",["354","355","356","357"],[],"import { strapiStoresApi } from \"@lib/apis/Stores\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { atom, useAtom } from \"jotai\";\nimport React from \"react\";\n\nexport interface StoreImg {\n  name: string;\n  url: string;\n}\nexport interface StrapiStoreType {\n  id: number;\n  name: string;\n  road_address_name?: string;\n  phone?: string;\n  loc_x?: number;\n  loc_y?: number;\n  store_url?: string;\n  reviews?: [] | null;\n  Visits?: [] | null;\n  Wishes?: [] | null;\n  store_imgs?: StoreImg[] | null;\n  Menus?: [] | null;\n}\n\nexport const storeInfoAtoms = {\n  storeAtom: atom<StrapiStoreType>({\n    id: 0,\n    name: \"\",\n    reviews: [],\n  }),\n};\n\nexport default function StoreInfoProvider(props: {\n  children: React.ReactNode | React.ReactNode[];\n  storeId: string;\n}) {\n  const [storeInfo, setStoreInfo] = useAtom(storeInfoAtoms.storeAtom);\n  useQuery([\"getStore\"], {\n    queryFn: async () => {\n      return await strapiStoresApi.getStore(props.storeId);\n    },\n    onSuccess: (res: any) => {\n      setStoreInfo({\n        ...res.data,\n      });\n    },\n    onError: (err: any) => {\n      console.error(err);\n    },\n    retry: false,\n    enabled: props.storeId !== undefined,\n  });\n\n  useQuery([\"getStoreThumbNail\"], {\n    queryFn: async () => {\n      return await strapiStoresApi.getStoreThumbNail(props.storeId);\n    },\n    onSuccess: (res: any) => {\n      setStoreInfo({\n        ...storeInfo,\n        store_imgs: res.data,\n      });\n    },\n    onError: (err: any) => {\n      console.error(err);\n    },\n    retry: false,\n    enabled: props.storeId !== undefined,\n  });\n\n  return <>{props.children}</>;\n}\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/Header.tsx",["358","359"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { StoreName, Wrapper } from \"@components/Header\";\nimport { faBreadSlice, faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport { useAtomValue } from \"jotai\";\nimport { useRouter } from \"next/navigation\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { storeInfoAtoms } from \"../StoreInfoProvider\";\n\ninterface props {\n  isStoreImg?: boolean;\n}\nconst Header: React.FC<props> = ({ isStoreImg }) => {\n  const router = useRouter();\n  const userAtom = useAtomValue(userInfoAtoms.userAtom);\n  const storeInfo = useAtomValue(storeInfoAtoms.storeAtom);\n\n  /* wish & visit */\n  const [isVisit, setIsVisit] = useState(\n    storeInfo.Visits\n      ? storeInfo.Visits.findIndex(\n          (i: { UserId: number }) => i.UserId == userAtom.id\n        ) != -1\n      : false\n  );\n  const [isWish, setIsWish] = useState(\n    storeInfo.Wishes\n      ? storeInfo.Wishes.findIndex(\n          (i: { UserId: number }) => i.UserId == userAtom.id\n        ) != -1\n      : false\n  );\n  const onClickFeature = (e: React.MouseEvent): void => {\n    if (!userAtom.id) return router.push(\"/auth/login\");\n    \n    const {\n      currentTarget: { id },\n    } = e;\n    switch (id) {\n      case \"visit\":\n        isVisit\n          ? axios\n              .delete(`/user/visit/${userAtom.id}/${storeInfo.id}`)\n              .then((res) => res.data.success && setIsVisit(false))\n          : axios\n              .get(`/user/visit/${userAtom.id}/${storeInfo.id}`)\n              .then((res) => res.data.success && setIsVisit(true));\n        break;\n      case \"wish\":\n        isWish\n          ? axios\n              .delete(`/user/wish/${userAtom.id}/${storeInfo.id}`)\n              .then((res) => res.data.success && setIsWish(false))\n          : axios\n              .get(`/user/wish/${userAtom.id}/${storeInfo.id}`)\n              .then((res) => res.data.success && setIsWish(true));\n        break;\n    }\n  };\n\n  return (\n    <StyledHeader>\n      <StoreName>{storeInfo.name}</StoreName>\n      {/* <Wrapper>\n        <span>{storeInfo.reviewCnt}</span>\n        <span id=\"small\">리뷰</span>\n      </Wrapper>\n      <Wrapper>\n        <span>{storeInfo.avgStar?.toFixed(1)}</span>\n        <span id=\"small\">평점</span>\n      </Wrapper> */}\n      <FontAwesomeIcon\n        id=\"visit\"\n        onClick={onClickFeature}\n        icon={faBreadSlice}\n        color={isVisit ? \"#e2c26e\" : \"#bfbfbf\"}\n      />\n      <FontAwesomeIcon\n        id=\"wish\"\n        onClick={onClickFeature}\n        icon={faHeart}\n        color={isWish ? \"#f89573\" : \"#bfbfbf\"}\n      />\n    </StyledHeader>\n  );\n};\nexport default Header;\nconst StyledHeader = styled.header`\n  position: sticky;\n  display: flex;\n  align-items: center;\n  padding: 10px 20px;\n  top: 0px;\n  font-size: medium;\n  border-bottom: ${(props) => `solid thin` + props.theme.color.border_grey};\n  background-color: white;\n  color: #6f6f6f;\n  z-index: 999;\n  gap: 10px;\n  box-sizing: border-box;\n  #visit {\n    flex: 0.1;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/ImgGridContainer.tsx",["360"],[],"import Image from \"next/image\";\nimport { useRouter } from \"next/navigation\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { StoreImg } from \"../StoreInfoProvider\";\ninterface props {\n  imgArr: StoreImg[];\n}\nconst ImgGridContainer: React.FC<props> = ({ imgArr }) => {\n  const router = useRouter();\n\n  const onClickStoreImage = () => {\n    // router.push(\"/store/image\");\n  };\n  return (\n    <Wrapper>\n      {imgArr.length == 1 && (\n        <Wrapper>\n          <Image\n            src={`${process.env.NEXT_PUBLIC_DOMAIN}${imgArr[0].url}`}\n            width=\"100\"\n            height=\"100\"\n            alt=\"img-1\"\n            unoptimized={true}\n          />\n        </Wrapper>\n      )}\n      {imgArr.length == 2 && (\n        <GridContainer>\n          {imgArr.map((img) => (\n            <ImgWrapper key={img.name}>\n              <Image\n                src={`${process.env.NEXT_PUBLIC_DOMAIN}${img.url}`}\n                height=\"100\"\n                width=\"100\"\n                alt=\"img-2\"\n                unoptimized={true}\n              />\n            </ImgWrapper>\n          ))}\n        </GridContainer>\n      )}\n      {imgArr.length == 3 && (\n        <GridContainer>\n          {imgArr.map((img, index) => {\n            if (index == 0)\n              return (\n                <ImgWrapper isBigger key={img.name + index}>\n                  <Image\n                    src={`${process.env.NEXT_PUBLIC_DOMAIN}${img.url}`}\n                    width=\"100\"\n                    height=\"100\"\n                    alt=\"img-1\"\n                    unoptimized={true}\n                  />\n                </ImgWrapper>\n              );\n            if (index == 2)\n              return (\n                <ImgWrapper onClick={onClickStoreImage} key={img.name + index}>\n                  <span>더보기</span>\n                  <MoreImg\n                    className=\"plus-img\"\n                    alt=\"img-more\"\n                    src={`${process.env.NEXT_PUBLIC_DOMAIN}${img.url}`}\n                    width=\"100\"\n                    height=\"100\"\n                    unoptimized={true}\n                  />\n                </ImgWrapper>\n              );\n            else\n              return (\n                <ImgWrapper key={img.name + index}>\n                  <Image\n                    src={`${process.env.NEXT_PUBLIC_DOMAIN}${img.url}`}\n                    width=\"100\"\n                    height=\"100\"\n                    alt=\"img\"\n                    unoptimized={true}\n                  />\n                </ImgWrapper>\n              );\n          })}\n        </GridContainer>\n      )}\n    </Wrapper>\n  );\n};\nexport default ImgGridContainer;\nconst Wrapper = styled.div``;\nconst GridContainer = styled.div`\n  display: grid;\n  width: 100vw;\n  height: 100vw;\n  grid-template-columns: 50% 50%;\n  cursor: pointer;\n  span {\n    z-index: 999;\n    color: white;\n    position: absolute;\n    font-size: large;\n  }\n  img {\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n  }\n`;\nconst ImgWrapper = styled.div<{ isBigger?: boolean }>`\n  display: flex;\n  background-color: white;\n  overflow: hidden;\n  justify-content: center;\n  align-items: center;\n  ${(props) =>\n    props.isBigger &&\n    `\n    grid-row-start: 1;\n    grid-row-end: 3;\n  `}\n`;\nconst MoreImg = styled(Image)`\n  opacity: 50%;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/ImgViewer.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/MapInfo.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/MenuInfo.tsx",["361"],[],"import clsx from \"clsx\";\nimport { useAtom, useAtomValue } from \"jotai\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { openedStoreInfoAtom } from \"../PageContent\";\nimport { StrapiStoreType, storeInfoAtoms } from \"../StoreInfoProvider\";\n\nconst MenuInfo = () => {\n  const storeInfo: StrapiStoreType = useAtomValue(storeInfoAtoms.storeAtom);\n  const [openedStoreInfo, setOpenedStoreInfo] = useAtom(openedStoreInfoAtom);\n\n  return (\n    <Wrapper>\n      <Label\n        id=\"menu\"\n        onClick={() => setOpenedStoreInfo(\"menu\")}\n        className={clsx(openedStoreInfo === \"menu\" ? \"text-blue\" : \"\")}\n      >\n        메뉴\n      </Label>\n      {openedStoreInfo === \"menu\" && (\n        <div>\n          {storeInfo.Menus?.map((menu: any) => (\n            <Label key={menu.tit}>\n              <span id=\"tit\">{menu.tit}</span>\n              <span id=\"price\">{menu.price}</span>\n            </Label>\n          ))}\n        </div>\n      )}\n    </Wrapper>\n  );\n};\nexport default MenuInfo;\nconst Wrapper = styled.div``;\nconst Label = styled.div`\n  font-size: medium;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  span {\n    flex: 1;\n  }\n  #tit {\n    color: #636363;\n    font-weight: lighter;\n  }\n  #price {\n    flex: 1;\n    text-align: end;\n    color: #46a6ff;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/Review.tsx",["362","363","364"],[],"import ReviewForm from \"@app/store/[storeId]/components/ReviewForm\";\nimport ReviewList, { reviewProps } from \"@components/ReviewList\";\nimport clsx from \"clsx\";\nimport { useAtom, useAtomValue } from \"jotai\";\nimport { openedStoreInfoAtom } from \"../PageContent\";\nimport { storeInfoAtoms } from \"../StoreInfoProvider\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { strapiReviewsApi } from \"@lib/apis/ReviewsApis\";\n\nconst Review = () => {\n  const [storeInfo, setStoreInfo] = useAtom(storeInfoAtoms.storeAtom);\n  const [openedStoreInfo, setOpenedStoreInfo] = useAtom(openedStoreInfoAtom);\n\n  useQuery([\"getStoreReviews\"], {\n    queryFn: async () => {\n      return await strapiReviewsApi.getReviewsOfStore(storeInfo.id);\n    },\n    onSuccess: (res: any) => {\n      setStoreInfo({ ...storeInfo, reviews: res.data });\n    },\n    onError: (err: any) => {\n      console.error(err);\n    },\n    retry: false,\n    enabled: storeInfo.id !== 0,\n  });\n  return (\n    <div>\n      <div\n        id=\"review\"\n        onClick={() => setOpenedStoreInfo(\"review\")}\n        className={clsx(\n          \"flex items-center p-3 justify-between\",\n          openedStoreInfo === \"review\" ? \"text-blue\" : \"\"\n        )}\n      >\n        <span>리뷰</span>\n        {openedStoreInfo === \"review\" && <ReviewForm.triggerBtn />}\n      </div>\n\n      {openedStoreInfo === \"review\" && (\n        <>\n          <ReviewForm />\n          <div>\n            {storeInfo.reviews?.length === 0 ? (\n              <div className=\"flex justify-center w-full\">리뷰가 없어용</div>\n            ) : (\n              storeInfo.reviews?.map((review: reviewProps) => (\n                <ReviewList {...{ ...review }} key={review.id} />\n              ))\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Review;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/ReviewForm.tsx",["365","366","367","368"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { storeInfoAtoms } from \"@app/store/[storeId]/StoreInfoProvider\";\nimport { faBreadSlice, faCamera, faX } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { strapiReviewsApi } from \"@lib/apis/ReviewsApis\";\nimport { QueryClient, useMutation } from \"@tanstack/react-query\";\nimport clsx from \"clsx\";\nimport { atom, useAtom, useAtomValue } from \"jotai\";\nimport { useRouter } from \"next/navigation\";\nimport React, { useEffect, useState } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport styled from \"styled-components\";\nexport interface reviewState {\n  content: string;\n  star: number;\n  auth_user: number;\n  store: number;\n  store_imgs?: string;\n}\n\nconst isWriteModeAtom = atom<boolean>(false);\n\nconst ReviewForm = () => {\n  const storeInfo = useAtomValue(storeInfoAtoms.storeAtom);\n  const userAtom = useAtomValue(userInfoAtoms.userAtom);\n  const [isWriteMode, setisWriteMode] = useAtom(isWriteModeAtom);\n\n  const [reviewImg, setReviewImg] = useState<ArrayBuffer | string>();\n  const [review, setReview] = useState<reviewState>({\n    content: \"\",\n    star: 0,\n    auth_user: userAtom.id,\n    store: storeInfo.id,\n  });\n  const queryClient = new QueryClient();\n  const postReview = useMutation({\n    mutationFn: async ({\n      imgFormData,\n      reviewData,\n    }: {\n      imgFormData: FormData;\n      reviewData: reviewState;\n    }) => {\n      if (reviewImg) {\n        const res = await strapiReviewsApi.postReviewImg(imgFormData);\n\n        await strapiReviewsApi.postReview({\n          ...reviewData,\n          store_imgs: res?.data.data.id,\n        });\n      } else {\n        await strapiReviewsApi.postReview(reviewData);\n      }\n    },\n    onSuccess: () => {\n      setReview({\n        content: \"\",\n        star: 0,\n        auth_user: userAtom.id,\n        store: storeInfo.id,\n      });\n      setReviewImg(undefined);\n      setisWriteMode(false);\n      queryClient.invalidateQueries([\"getStoreReviews\"]);\n    },\n    onError: (err) => {\n      console.error(err);\n      alert(\"리뷰 작성에 실패했습니다.\");\n    },\n  });\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const imgFormData = new FormData();\n    imgFormData.append(\"data\", JSON.stringify({ store: storeInfo.id }));\n    imgFormData.append(\n      \"files.img\",\n      (event.target as any).elements.img.files[0]\n    );\n    postReview.mutate({ imgFormData, reviewData: review });\n  };\n\n  const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { files },\n    } = e;\n    if (files) {\n      const theFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n        setReviewImg(finishedEvent.target?.result || \"\");\n      };\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  return (\n    <div className={clsx(isWriteMode ? \"visible\" : \"hidden\")}>\n      <form\n        onSubmit={onSubmit}\n        className=\"flex flex-col w-full gap-5 p-4 relative\"\n      >\n        <div className=\"flex flex-row justify-between items-center w-full\">\n          <div className=\"flex flex-row gap-1 text-3xl\">\n            {Array.from({ length: 5 }, (v, i) => i).map((it) => (\n              <FontAwesomeIcon\n                key={it}\n                id={it + 1 + \"\"}\n                icon={faBreadSlice}\n                onClick={(e: React.MouseEvent) => {\n                  setReview({ ...review, star: parseInt(e.currentTarget.id) });\n                }}\n                color={review.star >= it + 1 ? \"#e2c26e\" : \"#cabfa3\"}\n              />\n            ))}\n            <span className=\"text-2xl font-semibold text-brown ml-2\">\n              {review.star}\n            </span>\n          </div>\n          <button\n            type=\"submit\"\n            id=\"sbm-btn\"\n            className=\"bg-brown text-white px-3 py-2 rounded-lg\"\n          >\n            <span>작성하기</span>\n          </button>\n        </div>\n\n        {!reviewImg && (\n          <label\n            htmlFor=\"file\"\n            className=\"w-fit flex items-center gap-1 px-3 py-2 rounded-lg border border-dashed border-gray-300\"\n          >\n            <FontAwesomeIcon icon={faCamera} color=\"#42454E\" />\n            <span className=\"flex items-center gap-1 text-gray-300\">\n              사진 추가 <span className=\"text-xs text-gray-700\">최대 1장</span>\n            </span>\n          </label>\n        )}\n        {reviewImg && (\n          <div className=\"relative border border-gray-1000 w-48 h-48 overflow-hidden flex items-center justify-center\">\n            <img src={reviewImg + \"\"} width=\"100%\" />\n            <FontAwesomeIcon\n              icon={faX}\n              color=\"#565656\"\n              className=\"absolute right-0 top-0 p-1\"\n              onClick={() => {\n                setReviewImg(undefined);\n              }}\n            />\n          </div>\n        )}\n\n        <StyledTextArea\n          id=\"textArea\"\n          placeholder=\"리뷰 작성하기\"\n          value={review.content}\n          maxLength={300}\n          onChange={(event) =>\n            setReview({\n              ...review,\n              content: event.target.value.substring(0, 300),\n            })\n          }\n        />\n        <span className=\"absolute right-5 bottom-5 text-sm text-gray-300\">\n          {review.content.length}\n          <span className=\"text-gray-800\"> / 300</span>\n        </span>\n        <input\n          id=\"file\"\n          type=\"file\"\n          name=\"img\"\n          style={{ display: \"none\" }}\n          onChange={onFileChange}\n          accept=\"image/png, image/jpeg\"\n        />\n      </form>\n    </div>\n  );\n};\n\nconst WriteBtn = () => {\n  const router = useRouter();\n  const [isWriteMode, setisWriteMode] = useAtom(isWriteModeAtom);\n  const user = useAtomValue(userInfoAtoms.userAtom);\n\n  return (\n    <button\n      onClick={() => {\n        user.email ? setisWriteMode(!isWriteMode) : router.push(\"/auth/login\");\n      }}\n      className=\"text-sm text-orange\"\n    >\n      {isWriteMode ? \"취소\" : \"작성하기\"}\n    </button>\n  );\n};\nReviewForm.triggerBtn = WriteBtn;\nexport default ReviewForm;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  all: unset;\n  width: auto;\n  min-height: 100px;\n  overflow: hidden;\n  resize: none;\n  padding: 12px;\n  border-radius: 8px;\n  position: relative;\n  background-color: #f4f6f9;\n  font-size: medium;\n  transition: 0.3s;\n  &::placeholder {\n    color: #b2bcd0;\n  }\n  &:focus {\n    background-color: white;\n    border: solid thin #ff9900;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/components/StoreInfo.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/store/[storeId]/page.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/app/wish/page.tsx",["369","370"],[],"\"use client\";\nimport { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport { useAtomValue } from \"jotai\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"../../components/Header\";\nimport Nav from \"../../components/Nav\";\nimport { StrapiStoreType } from \"@app/store/[storeId]/StoreInfoProvider\";\n// import StoreList, { StoreType } from \"../../components/StoreItem\";\nconst Page = () => {\n  const router = useRouter();\n  const userAtom = useAtomValue(userInfoAtoms.userAtom);\n\n  const [storeArr, setStoreArr] = useState<StrapiStoreType[]>([]);\n\n  useEffect(() => {\n    //로그인 처리\n    !userAtom.id && router.push(\"/auth/login\");\n    axios.get(`/user/wishArr/${userAtom.id}`).then((res) => {\n      setStoreArr(res.data);\n    });\n  }, []);\n  return (\n    <Container>\n      <Header>\n        <FontAwesomeIcon icon={faHeart} color=\"#f89573\" />\n        <span>관심 매장</span>\n      </Header>\n      {/* {storeArr.map((store: StrapiStoreType) => (\n        <StoreList store={store} />\n      ))} */}\n      <Nav />\n    </Container>\n  );\n};\nexport default Page;\nconst Container = styled.div``;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/Grid.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/components/Header.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/components/ImgModal.tsx",["371","372","373","374"],[],"import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\ninterface props {\n  src: string;\n  width?: string;\n  height?: string;\n}\nconst ImgModal: React.FC<props> = ({ src, width, height }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const onClick = () => {\n    setIsOpen(true);\n  };\n  /* img error 처리 func */\n  const imgError = (event: React.MouseEvent<HTMLImageElement, Event>) => {\n    event.currentTarget.src = \"logo.png\";\n    event.currentTarget.width = 60;\n    event.currentTarget.height = 60;\n  };\n\n  const wrapperRef = useRef<HTMLImageElement>(null);\n  /* 외부영역 클릭 감지 */\n  const handleClickOutside = (event: MouseEvent) => {\n    if (wrapperRef && !wrapperRef.current?.contains(event.target as Node)) {\n      setIsOpen(false);\n    } else {\n      setIsOpen(true);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  return (\n    <>\n      <img\n        src={src}\n        style={{ backgroundColor: \"white\" }}\n        onError={imgError}\n        onClick={onClick}\n        width={width}\n        height={height}\n        className=\"img\"\n      />\n      {isOpen && (\n        <Modal>\n          <img ref={wrapperRef} src={src} />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default ImgModal;\n\nconst Modal = styled.div`\n  z-index: 9999;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background-color: #00000054;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  img {\n    width: 100%;\n    object-fit: contain;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/LoadingScreen.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/components/LocList.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/components/Map.tsx",["375","376","377"],[],"import { kakaoLocation } from \"@app/map/PageContent\";\nimport { StrapiStoreType } from \"@app/store/[storeId]/StoreInfoProvider\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { usePathname } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface locationProps {\n  loc: kakaoLocation;\n  setLoc: React.Dispatch<React.SetStateAction<kakaoLocation>> | null;\n  curLoc: kakaoLocation;\n  markerArr: StrapiStoreType[];\n}\ndeclare global {\n  interface Window {\n    kakao: any;\n  }\n}\nconst Map: React.FC<locationProps> = ({ loc, setLoc, curLoc, markerArr }) => {\n  const pathname = usePathname();\n  const [mapCenter, setMapcenter] = useState<kakaoLocation>({\n    title: \"\",\n    y: loc.y,\n    x: loc.x,\n  });\n  useEffect(() => {\n    map();\n  }, [loc, markerArr]);\n\n  const onClickReSearch = () => {\n    setLoc && setLoc(mapCenter);\n  };\n\n  /* 카카오 지도 생성 */\n  const map = () => {\n    const container = document.getElementById(\"mapContainer\");\n    const options = {\n      center: new window.kakao.maps.LatLng(loc?.y, loc?.x),\n      level: 5,\n    };\n\n    const map = new window.kakao.maps.Map(container, options);\n    /* 내위치 마커 */\n    new window.kakao.maps.Marker({\n      map: map,\n      position: new window.kakao.maps.LatLng(curLoc?.y, curLoc?.x),\n      image: new window.kakao.maps.MarkerImage(\n        \"/assets/curLoc.png\",\n        new window.kakao.maps.Size(20, 20)\n      ),\n      clickable: true,\n    });\n    /* store 마커 */\n    markerArr.map((el) => {\n      const marker = new window.kakao.maps.Marker({\n        map: map,\n        position: new window.kakao.maps.LatLng(el.loc_y, el.loc_x),\n        title: el.name,\n        clickable: true,\n      });\n      const contentString = `\n       <div><div id=\"info\">\n       <span>${el.name}</span>\n       <span>${el.road_address_name}</span>\n       </div></div>\n      `;\n      const overlay = new window.kakao.maps.CustomOverlay({\n        content: contentString,\n        map: map,\n        position: marker.getPosition(),\n      });\n      overlay.setMap(null);\n      /* info-window 클릭 이벤트 */\n      window.kakao.maps.event.addListener(marker, \"click\", function () {\n        overlay.setMap(map);\n      });\n      window.kakao.maps.event.addListener(\n        map,\n        \"click\",\n        function (mouseEvent: any) {\n          const latlng = mouseEvent.latLng;\n          if (latlng != marker.getPosition()) {\n            overlay.setMap(null);\n          }\n        }\n      );\n    });\n    /* 지도 중심 좌표 */\n    window.kakao.maps.event.addListener(map, \"center_changed\", function () {\n      const center = map.getCenter();\n      setMapcenter({ title: \"\", y: center.getLat(), x: center.getLng() });\n    });\n  };\n  return (\n    <>\n      {pathname == \"/map\" && (\n        <ReSearchBtn onClick={onClickReSearch}>\n          <FontAwesomeIcon icon={faRedo} />\n          <span>현 위치 검색</span>\n        </ReSearchBtn>\n      )}\n      <MapDiv\n        id=\"mapContainer\"\n        style={{\n          width: \"100%\",\n          height: \"300px\",\n        }}\n      ></MapDiv>\n    </>\n  );\n};\nexport default Map;\nconst ReSearchBtn = styled.div`\n  color: ${(props) => props.theme.color.blue};\n  display: flex;\n  align-items: center;\n  background-color: white;\n  position: absolute;\n  z-index: 9;\n  font-size: small;\n  padding: 5px 10px;\n  border-radius: 20px;\n  margin-left: 50%;\n  transform: translate(-50%, 10px);\n  gap: 5px;\n`;\nconst MapDiv = styled.div`\n  #info {\n    font-size: small;\n    border: solid #dcdcdc;\n    border: solid #46a6ff;\n    background-color: rgb(255, 255, 255);\n    padding: 5px 10px;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    transform: translate(40%, -130%);\n    box-shadow: 2px 2px 2px 2px #46a6ff33;\n  }\n  #info > span:nth-child(1) {\n    color: #46a6ff;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/Nav.tsx",["378"],[],"import {\n  faBook,\n  faBreadSlice,\n  faHeart,\n  faMapMarkerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from \"clsx\";\nimport { throttle } from \"lodash\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport styled from \"styled-components\";\n\nconst Nav: React.FC = () => {\n  const pathname = usePathname();\n  const [visible, setVisible] = useState(true);\n  const beforeScrollY = useRef(0);\n\n  useEffect(() => {\n    window.addEventListener(\"touchmove\", handleScroll);\n    return () => {\n      window.removeEventListener(\"touchmove\", handleScroll);\n    };\n  }, []);\n\n  const handleScroll = useMemo(\n    () =>\n      throttle((e) => {\n        const currentScrollY = e.touches[0].screenY;\n        if (beforeScrollY.current > currentScrollY) {\n          setVisible(false);\n        } else {\n          setVisible(true);\n        }\n        beforeScrollY.current = currentScrollY;\n      }, 250),\n    [beforeScrollY]\n  );\n  return (\n    <BottomNav className={clsx(visible ? \"visible\" : \"invisible\")}>\n      <StyledLink href=\"/home\">\n        <FontAwesomeIcon\n          icon={faBreadSlice}\n          id=\"icon\"\n          color={pathname == \"/\" ? \"#e2c26e\" : \"#6f6f6f\"}\n        />\n        <span>홈</span>\n      </StyledLink>\n      <StyledLink href=\"/map\">\n        <FontAwesomeIcon\n          id=\"icon\"\n          icon={faMapMarkerAlt}\n          color={pathname == \"/storemap\" ? \"#46A6FF\" : \"#6f6f6f\"}\n        />\n        <span>빵 지도</span>\n      </StyledLink>\n\n      <StyledLink href=\"/wish\">\n        <FontAwesomeIcon\n          id=\"icon\"\n          icon={faHeart}\n          color={pathname == \"/wish\" ? \"#f89573\" : \"#6f6f6f\"}\n        />\n        <span>관심</span>\n      </StyledLink>\n      <StyledLink href=\"/feed\">\n        <FontAwesomeIcon\n          id=\"icon\"\n          icon={faBook}\n          color={pathname == \"/feed\" ? \"#46A6FF\" : \"#6f6f6f\"}\n        />\n        <span>일지</span>\n      </StyledLink>\n    </BottomNav>\n  );\n};\n\nexport default Nav;\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  #icon {\n    font-size: large;\n    margin-bottom: 5px;\n  }\n  span {\n    font-size: xx-small;\n    margin-top: 5px;\n  }\n`;\nconst BottomNav = styled.div`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  gap: 20%;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n  border-top: ${(props) => `solid thin` + props.theme.color.border_grey};\n  background-color: white;\n  z-index: 100;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/Notice.tsx",["379","380","381","382","383","384","385","386","387","388"],[],"import { faBreadSlice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Notice: React.FC = () => {\n  return (<>\n    <NoticeDiv className=\"row-container\">\n      <Prototype className=\"col-container\">\n        <Text className=\"row-container\">\n          <img src=\"logo.png\" width=\"15%\" />\n          <div className=\"col-container\">\n            <span>빵순은 현재 모바일 기기에서만 이용 가능합니다.</span>\n            <span>모바일 기기에서 빵순을 이용해보세요!</span>\n          </div>\n        </Text>\n        <img src=\"prototype2.png\" width=\"70%\" />\n      </Prototype>\n      <Content className=\"col-container\">\n        <Wrapper className=\"col-container\">\n          <ContentList className=\"row-container\">\n            <span><FontAwesomeIcon icon={faBreadSlice} color=\"#e2c26e\" id=\"icon\" /> 빵집 랭킹 확인</span>\n            <span><FontAwesomeIcon icon={faBreadSlice} color=\"#e2c26e\" id=\"icon\" />  빵 지도 서비스</span>\n            <span><FontAwesomeIcon icon={faBreadSlice} color=\"#e2c26e\" id=\"icon\" /> 나만의 빵집 기록 서비스</span>\n            <span><FontAwesomeIcon icon={faBreadSlice} color=\"#e2c26e\" id=\"icon\" /> 관심 빵집 등록</span>\n          </ContentList>\n          <ContentDetail>\n            <p>\n              현재 인기있는 빵집 &apos 랭킹&apos 을 확인해보고,<br />\n              &apos 빵지도&apos 를 이용하여 내 주위의 빵집들과 원하는 지역의 빵집들을 살펴봐요!</p>\n            <p>\n              로그인하여, 나의 리뷰 & 관심 빵집 등록 & 방문 빵집 등록등 &apos 나만의 기록 서비스&apos 를 경험해보세요!</p>\n          </ContentDetail>\n          <ImgContainer className=\"row-container\">\n            <ImgWarpper>\n              <img src=\"main.png\" />\n            </ImgWarpper>\n            <ImgWarpper>\n              <img src=\"storemap.png\" />\n            </ImgWarpper>\n            <ImgWarpper>\n              <img src=\"store.png\" />\n            </ImgWarpper>\n          </ImgContainer>\n        </Wrapper>\n\n      </Content>\n    </NoticeDiv>\n  </>)\n}\nexport default Notice;\nconst Prototype = styled.div`\n  flex: 0.35;\n  margin-top: 100px;\n  align-items: center;\n`\nconst Content = styled.div`\n  flex: 0.7;\n  align-items: center;\n`\nconst Text = styled.div`\n  width: 90%;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 30px;\n  color: #636363;\n  margin-left: 10px;\n`\nconst Wrapper = styled.div`\n  width: 90%;\n  border-radius: 20px;\n  box-shadow: -10px 5px 30px 10px #46a6ff18;\n  margin-top:50px;\n  padding-bottom: 100px;\n  display: flex;\n  align-items: center;\n`\nconst ImgWarpper = styled.div`\n  border-radius: 15px;\n  width: 25%;\n  padding: 5px 0;\n  box-shadow: -5px 10px 10px 10px #00000017;\n  overflow: hidden;\n  justify-content: center;\n  img{\n    width: 100%;\n  }\n`\nconst ContentList = styled.div`\n  gap: 30px;\n  margin-top: 50px;\n  margin-bottom: 30px;\n  justify-content: center;\n  padding: 10px 20px;\n  border-bottom: solid thin #46A6FF;\n  border-top: solid thin #46A6FF;\n  #icon{\n    margin-right: 5px;\n  }\n`\nconst ContentDetail = styled.div`\n  font-size: small;\n  color: #9e9e9e;\n  width: 70%;\n  margin-left: 50px;\n  margin-bottom: 30px;\n  p:nth-child(2){\n    margin-left: 50px;\n  }\n`\nconst ImgContainer = styled.div`\n  width: 85%;\n  justify-content: center;\n`\nconst NoticeDiv = styled.div`\n  font-size: medium;\n  font-weight: lighter;\n  justify-content: center;\n  height: 100vh;\n  overflow: hidden;\n  align-items: flex-start;\n`","/Users/jihyeon/Documents/project/BBangSoon/src/components/Review.tsx",["389","390","391","392","393","394","395","396","397","398","399","400"],[],"import axios from \"axios\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"./Nav\";\nimport StarCmp from \"./StarCmp\";\nimport { StrapiStoreType } from \"@app/store/[storeId]/StoreInfoProvider\";\n// import StoreList, { StoreType } from \"./StoreItem\";\nconst Review: React.FC = () => {\n  const router = useRouter();\n  // const { review } = useSelector((state: RootState) => ({\n  //   review: state.review.review,\n  // }));\n  // const review = {};\n  const [store, setStore] = useState<StrapiStoreType>(); // DetailReview's store\n\n  // const onClickDel = () => {\n  //   axios.delete(`/store/review/${review.id}`).then(() => {\n  //     router.push(\"/feed\");\n  //   });\n  // };\n  // useEffect(() => {\n  //   axios.post(`/store/${review.StoreId}`).then((res) => setStore(res.data));\n  // }, []);\n  return (\n    <Container>\n      {/* {store != undefined && <StoreList store={store} />} */}\n      {/* {review.reviewImg && (\n        <ImgWrapper>\n          <img src={review.reviewImg} />\n        </ImgWrapper>\n      )}\n      <ReviewCmp className=\"col-container\">\n        <Wrapper className=\"row-container\">\n          <StarCmp reviewStar={review.star} />\n          <DateBox>\n            {new Date(review.date).getFullYear()}.\n            {new Date(review.date).getMonth() + 1}.\n            {new Date(review.date).getDate()}\n          </DateBox>\n          <Button onClick={onClickDel}>삭제</Button>\n        </Wrapper>\n        <Content>{review.content}</Content>\n      </ReviewCmp> */}\n      <Nav />\n    </Container>\n  );\n};\nexport default Review;\nconst Container = styled.div`\n  width: 100%;\n`;\nconst Wrapper = styled.div`\n  align-items: center;\n  margin-bottom: 15px;\n  width: 100%;\n`;\nconst Content = styled.span`\n  font-weight: lighter;\n`;\nconst ImgWrapper = styled.div`\n  width: 100vw;\n  height: 100vw;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n`;\nconst DateBox = styled.div`\n  flex: 1;\n  text-align: end;\n  font-weight: lighter;\n`;\nconst Button = styled.button`\n  margin-left: 10px;\n  font-size: small;\n  color: #aaaaaa;\n`;\nconst ReviewCmp = styled.div`\n  align-items: flex-start;\n  width: 90%;\n  font-size: medium;\n  padding: 15px;\n  border-top: ${(props) => `solid thin` + props.theme.color.border_grey};\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/ReviewList.tsx",["401","402","403","404"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { storeInfoAtoms } from \"@app/store/[storeId]/StoreInfoProvider\";\nimport axios from \"axios\";\nimport { useAtom, useAtomValue } from \"jotai\";\nimport styled from \"styled-components\";\nimport ImgModal from \"./ImgModal\";\nimport StarCmp from \"./StarCmp\";\nexport interface reviewProps {\n  id: number;\n  attributes: {\n    store_imgs: {\n      data: {\n        attributes: { img: { data: { attributes: { url: string } } } };\n      }[];\n    };\n    content: string | null;\n    star: number;\n    nickName: string;\n    createdAt: Date;\n    UserId: number;\n  };\n}\nconst ReviewList: React.FC<reviewProps> = ({ id, attributes }) => {\n  const [storeInfo, setStoreInfo] = useAtom(storeInfoAtoms.storeAtom);\n  const userAtom = useAtomValue(userInfoAtoms.userAtom);\n\n  const onClickDel = () => {\n    // axios.delete(`/store/${id}`);\n    // axios.post(`/storeCrawl`, storeInfo).then((res) => {\n    //   setStoreInfo({ ...storeInfo, ...res.data });\n    // });\n  };\n  return (\n    <Container className=\"col-container\">\n      {attributes.store_imgs.data.length !== 0 && (\n        <ImgWrapper>\n          <ImgModal\n            src={`${process.env.NEXT_PUBLIC_DOMAIN}${attributes.store_imgs.data[0].attributes.img.data.attributes.url}`}\n            width=\"200%\"\n          />\n        </ImgWrapper>\n      )}\n      <Wrapper className=\"row-container\">\n        <StarCmp reviewStar={attributes.star} />\n        {userAtom.id === attributes.UserId && (\n          <Button onClick={onClickDel}>삭제</Button>\n        )}\n      </Wrapper>\n      <span id=\"content\">{attributes.content}</span>\n      <Detail>\n        <span id=\"nickName\">{attributes.nickName}</span>\n        <span id=\"date\">\n          {new Date(attributes.createdAt).getFullYear()}.\n          {new Date(attributes.createdAt).getMonth() + 1}.\n          {new Date(attributes.createdAt).getDate()}\n        </span>\n      </Detail>\n    </Container>\n  );\n};\nexport default ReviewList;\n\nconst Container = styled.div`\n  align-items: flex-start;\n  width: 90%;\n  font-size: medium;\n  padding: 15px;\n  border-top: ${(props) => `solid thin` + props.theme.color.border_grey};\n  > div {\n    padding: 10px 0;\n  }\n  #date,\n  #content {\n    font-weight: lighter;\n  }\n`;\nconst Detail = styled.div`\n  span {\n    margin-right: 5px;\n    color: #6f6f6f;\n  }\n`;\nconst Button = styled.button`\n  flex: 1;\n  text-align: end;\n  font-size: small;\n  color: #aaaaaa;\n`;\nconst Wrapper = styled.div`\n  align-items: center;\n  margin-bottom: 15px;\n  width: 100%;\n`;\nconst ImgWrapper = styled.div`\n  max-width: 100%;\n  max-height: 200px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/StarCmp.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/components/StoreImg.tsx",["405"],[],"import Header from \"@app/store/[storeId]/components/Header\";\nimport { storeInfoAtoms } from \"@app/store/[storeId]/StoreInfoProvider\";\nimport axios from \"axios\";\nimport { useAtomValue } from \"jotai\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"./Grid\";\nimport ImgModal from \"./ImgModal\";\nimport Nav from \"./Nav\";\ninterface img {\n  imageUrl: string;\n}\nconst StoreImg = () => {\n  const storeInfo = useAtomValue(storeInfoAtoms.storeAtom);\n  const [storeImgArr, setStoreImgArr] = useState<img[]>([]);\n\n  useEffect(() => {\n    axios.post(`/store/image/${storeInfo.id}`).then((res) => {\n      setStoreImgArr(res.data);\n    });\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Header isStoreImg={true} />\n        <Wrapper className=\"col-container\">\n          <Wrapper>\n            <Label style={{ color: \"#46A6FF\" }}>\n              사진 <span id=\"side\">{\"총 \" + storeImgArr.length + \"장\"}</span>\n            </Label>\n            <Grid>\n              {storeImgArr.map((img: img) => (\n                <div className=\"container\" key={img.imageUrl}>\n                  <ImgModal src={img.imageUrl} width=\"100%\" />\n                </div>\n              ))}\n            </Grid>\n          </Wrapper>\n        </Wrapper>\n        <Nav />\n      </Container>\n    </>\n  );\n};\nexport default StoreImg;\nconst Container = styled.div``;\nconst Wrapper = styled.div``;\nconst Label = styled.div`\n  font-size: medium;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  width: 90%;\n  #side {\n    text-align: end;\n    font-size: xx-small;\n    color: #6f6f6f;\n    flex: 1;\n  }\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/StoreItem.tsx",["406"],[],"import {\n  StrapiStoreType,\n  storeInfoAtoms,\n} from \"@app/store/[storeId]/StoreInfoProvider\";\nimport { useSetAtom } from \"jotai\";\nimport { useRouter } from \"next/navigation\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\ninterface StoreListProps {\n  store: StrapiStoreType;\n}\nconst StoreItem = ({\n  store,\n  children,\n}: React.PropsWithChildren<StoreListProps>) => {\n  const router = useRouter();\n  const setStoreInfo = useSetAtom(storeInfoAtoms.storeAtom);\n\n  return (\n    <Store\n      onClick={() => {\n        setStoreInfo(store);\n        router.push(`/store/${store.id}`);\n      }}\n    >\n      {children}\n      <StoreName>{store.name}</StoreName>\n      <Wrapper className=\"row-container\">\n        {/* <Block>\n          <span>\n            {store.avgStar == null ? (\n              <FontAwesomeIcon icon={faSpinner} />\n            ) : (\n              store.reviewCnt\n            )}\n          </span>\n          <span className=\"text-sm\">리뷰</span>\n        </Block>\n        <Block>\n          <span>\n            {store.avgStar == null ? (\n              <FontAwesomeIcon icon={faSpinner} />\n            ) : (\n              store.avgStar.toFixed(1)\n            )}\n          </span>\n          <span className=\"text-sm\">평점</span>\n        </Block> */}\n      </Wrapper>\n    </Store>\n  );\n};\nexport default StoreItem;\nconst Store = styled.div`\n  width: 100vw;\n  max-width: 100vw;\n  display: flex;\n  align-items: center;\n  padding: 20px 0px;\n  height: 30px;\n  border-top: ${(props) => `solid thin` + props.theme.color.border_grey};\n`;\nconst Block = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: large;\n  color: #636363;\n`;\nconst Wrapper = styled.div`\n  gap: 20px;\n  margin-right: 20px;\n`;\nconst StoreName = styled.span`\n  flex: 1;\n  margin-left: 20px;\n`;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/hooks/useAuth.ts",["407","408","409","410"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\nimport { useResetAtom } from \"jotai/utils\";\nimport { useEffect, useState } from \"react\";\n\nconst useAuth = () => {\n  const [jwtToken, setJwtToken] = useState(null);\n\n  const setUserAtom = useSetAtom(userInfoAtoms.userAtom);\n  const user = useAtomValue(userInfoAtoms.userAtom);\n  const resetUserAtom = useResetAtom(userInfoAtoms.userAtom);\n\n  useQuery([\"getAuth\"], {\n    queryFn: async () => {\n      return await axios.get(\"/api/auth\", {\n        headers: { Authorization: `${jwtToken}` },\n      });\n    },\n    onSuccess: (res: any) => {\n      setUserAtom(res.data.user);\n    },\n    onError: (err: any) => {\n      console.error(err);\n      resetUserAtom();\n      window.localStorage.removeItem(\"token\");\n    },\n    enabled: !!jwtToken,\n    retry: false,\n  });\n\n  useEffect(() => {\n    const token = JSON.parse(\n      window?.localStorage.getItem(\"token\") || \"null\"\n    )?.access_token;\n\n    if (token) {\n      setJwtToken(token);\n      axios.defaults.headers.common[\"Authorization\"] = `${token}`;\n    }\n  }, []);\n\n  return;\n};\n\nexport default useAuth;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/hooks/useAuthKakao.ts",["411","412","413"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { useSetAtom } from \"jotai\";\nimport { useResetAtom } from \"jotai/utils\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { useEffect } from \"react\";\n\nconst useAuthKakao = () => {\n  const router = useRouter();\n\n  const searchParams = useSearchParams();\n  const query = searchParams?.get(\"code\");\n\n  const setUserAtom = useSetAtom(userInfoAtoms.userAtom);\n  const resetUserAtom = useResetAtom(userInfoAtoms.userAtom);\n\n  const getKakaoToken = useMutation({\n    mutationFn: async (code: string) => {\n      const data = {\n        grant_type: \"authorization_code\",\n        client_id: process.env.NEXT_PUBLIC_KAKAO_REST_KEY || \"\",\n        redirect_uri: \"http://localhost:3000/auth/login\",\n        code,\n      };\n      const queryString = Object.keys(data)\n        .map((key) => `${key}=${data[key as keyof typeof data]}`)\n        .join(\"&\");\n      return await axios.post(\n        \"https://kauth.kakao.com/oauth/token\",\n        queryString,\n        {\n          headers: {\n            \"Content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n          },\n        }\n      );\n    },\n    onSuccess: (res: any) => {\n      putKakaoTokenToServer.mutate(res.data.access_token);\n    },\n    retry: false,\n  });\n\n  const putKakaoTokenToServer = useMutation({\n    mutationFn: async (token: string) => {\n      return await axios.put(\"/api/auth/kakao\", {\n        access_token: token,\n      });\n    },\n    onSuccess: (res: any) => {\n      const { jwt, user } = res.data;\n\n      if (res.status == 201 || res.status == 200) {\n        setUserAtom(user);\n        window.localStorage.setItem(\n          \"token\",\n          JSON.stringify({\n            access_token: jwt,\n          })\n        );\n        axios.defaults.headers.common[\"Authorization\"] = `${jwt}`;\n        router.push(\"/home\");\n      } else {\n        window.alert(\"로그인에 실패하였습니다.\");\n        resetUserAtom();\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (query) {\n      getKakaoToken.mutate(query);\n    }\n  }, [query]);\n  return {\n    isLoading: getKakaoToken.isLoading || putKakaoTokenToServer.isLoading,\n  };\n};\n\nexport default useAuthKakao;\n","/Users/jihyeon/Documents/project/BBangSoon/src/components/hooks/useGeoLocation.ts",["414"],[],"import { userInfoAtoms } from \"@app/GlobalProvider\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { useSetAtom } from \"jotai\";\nimport { useEffect, useState } from \"react\";\n\nconst useGeoLocation = () => {\n  const setLocationAtom = useSetAtom(userInfoAtoms.locationAtom);\n  const [position, setPosition] = useState<GeolocationPosition | undefined>(\n    undefined\n  );\n\n  useQuery([\"getLocation\"], {\n    queryFn: async () =>\n      await axios.get(\n        `https://dapi.kakao.com/v2/local/geo/coord2address.json`,\n        {\n          headers: {\n            Authorization: `KakaoAK ${process.env.NEXT_PUBLIC_KAKAO_REST_KEY}`,\n          },\n          params: {\n            y: position?.coords.latitude,\n            x: position?.coords.longitude,\n          },\n        }\n      ),\n    onSuccess: ({ data }: any) => {\n      setLocationAtom({\n        si: data.documents[0].address.region_1depth_name,\n        y: position?.coords.latitude || 0,\n        x: position?.coords.longitude || 0,\n      });\n    },\n    onError: (error) => {\n      console.error(error);\n    },\n    enabled: position !== undefined,\n  });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(setPosition);\n  }, []);\n\n  return;\n};\n\nexport default useGeoLocation;\n","/Users/jihyeon/Documents/project/BBangSoon/src/lib/apis/AuthUsersApis.ts",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/lib/apis/ReviewsApis.ts",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/lib/apis/Stores.ts",["415"],[],"import axios from \"axios\";\n\nconst getNearbyStores = async ({\n  curr_x,\n  curr_y,\n}: {\n  curr_x: number;\n  curr_y: number;\n}) => {\n  try {\n    const { data } = await axios.get(\n      `${process.env.NEXT_PUBLIC_DOMAIN}/api/nearby-stores?curr_x=${curr_x}&curr_y=${curr_y}`\n    );\n\n    return { data };\n  } catch (error) {\n    console.error(error);\n    return { attributes: undefined };\n  }\n};\n\nconst getStore = async (storeId: string) => {\n  try {\n    const {\n      data: { data },\n    } = await axios.get(\n      `${process.env.NEXT_PUBLIC_DOMAIN}/api/stores/${storeId}`\n    );\n\n    return { data: { id: data.id, ...data.attributes } };\n  } catch (error) {\n    console.error(error);\n    return { attributes: undefined };\n  }\n};\n\nconst getStoreThumbNail = async (storeId: string) => {\n  try {\n    const {\n      data: { data },\n    } = await axios.get(\n      `${process.env.NEXT_PUBLIC_DOMAIN}/api/store-imgs?filters[store][id][$eq]=${storeId}&pagination[limit]=3&populate=*`\n    );\n\n    return { data: data.map((d: any) => d.attributes.img.data.attributes) };\n  } catch (error) {\n    console.error(error);\n    return { attributes: undefined };\n  }\n};\n\nexport const strapiStoresApi = { getNearbyStores, getStore, getStoreThumbNail };\n","/Users/jihyeon/Documents/project/BBangSoon/src/styles/styled.d.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/styles/theme.tsx",[],[],"/Users/jihyeon/Documents/project/BBangSoon/src/utils/KakaoLocalAPI.tsx",["416","417"],[],"import { resultState } from \"@app/home/PageContent\";\nimport { kakaoLocation } from \"@app/map/PageContent\";\nimport axios from \"axios\";\n\nexport const getStore = async (\n  page: number,\n  storeArr: resultState[],\n  search: string\n) => {\n  let arr: resultState[];\n  let isEnd: boolean;\n\n  await axios\n    .get(\n      `https://dapi.kakao.com/v2/local/search/keyword.json?query=${search}`,\n      {\n        headers: {\n          Authorization: `KakaoAK ${process.env.NEXT_PUBLIC_KAKAO_REST_KEY}`,\n        },\n        params: {\n          page: page,\n          category_group_code: \"CE7, FD6\",\n        },\n      }\n    )\n    .then((res) => {\n      arr = res.data.documents.filter(\n        (it: resultState) =>\n          it.category_group_code == \"CE7\" ||\n          it.category_name.split(\" > \")[1] == \"간식\"\n      );\n      isEnd = res.data.meta.is_end;\n      if (page != 1) {\n        arr = [...storeArr, ...arr];\n      }\n    });\n  return new Promise((resolve, reject) => {\n    resolve({ isEnd: isEnd, resultArr: arr });\n  });\n};\n// export const getStoreList = (\n//   storeArr: resultState[],\n//   setArr: React.Dispatch<React.SetStateAction<resultState[]>>\n// ) => {\n//   axios\n//     .post(\n//       \"/store/list\",\n//       storeArr.map((store: resultState) => ({ id: store.id }))\n//     )\n//     .then((res) => {\n//       const resArr = storeArr.map((store: resultState, idx: number) => ({\n//         ...store,\n//         ...res.data[idx],\n//       }));\n//       setArr(resArr);\n//       resArr.forEach(async (element: resultState, i: number) => {\n//         if (element.avgStar === null) {\n//           await axios\n//             .post(\"/storeCrawl/count\", {\n//               id: element.id,\n//               url: element.place_url,\n//             })\n//             .then((res) => {\n//               resArr[i] = { ...resArr[i], ...res.data };\n//               setArr([...resArr]);\n//             });\n//         }\n//       });\n//     });\n// };\nexport const getStoreMap = async (\n  page: number,\n  markerArr: resultState[],\n  loc: kakaoLocation\n) => {\n  let arr: resultState[];\n  let isEnd: boolean;\n  await axios\n    .get(`https://dapi.kakao.com/v2/local/search/keyword.json?query=디저트`, {\n      headers: {\n        Authorization: `KakaoAK ${process.env.NEXT_PUBLIC_KAKAO_REST_KEY}`,\n      },\n      params: {\n        y: loc.y,\n        x: loc.x,\n        category_group_code: \"CE7, FD6\",\n        page: page,\n        size: 15,\n        radius: 500,\n        sort: \"distance\",\n      },\n    })\n    .then((res) => {\n      arr = res.data.documents.filter(\n        (it: resultState) =>\n          (it.category_group_code == \"CE7\" &&\n            it.category_name.split(\" > \")[2] != \"커피전문점\") ||\n          it.category_name.split(\" > \")[1] == \"간식\"\n      );\n      isEnd = res.data.meta.is_end;\n      if (page != 1) {\n        arr = [...markerArr, ...arr];\n      }\n    });\n  return new Promise((resolve, reject) => {\n    resolve({ isEnd: isEnd, resultArr: arr });\n  });\n};\n",{"ruleId":"418","severity":2,"message":"419","line":22,"column":5,"nodeType":"420","messageId":"421","endLine":22,"endColumn":18,"suppressions":"422"},{"ruleId":"423","severity":1,"message":"424","line":14,"column":19,"nodeType":"425","messageId":"426","endLine":14,"endColumn":22,"suggestions":"427"},{"ruleId":"423","severity":1,"message":"424","line":47,"column":17,"nodeType":"425","messageId":"426","endLine":47,"endColumn":20,"suggestions":"428"},{"ruleId":"423","severity":1,"message":"424","line":39,"column":17,"nodeType":"425","messageId":"426","endLine":39,"endColumn":20,"suggestions":"429"},{"ruleId":"430","severity":1,"message":"431","line":3,"column":1,"nodeType":"432","endLine":44,"endColumn":3},{"ruleId":"423","severity":1,"message":"424","line":15,"column":17,"nodeType":"425","messageId":"426","endLine":15,"endColumn":20,"suggestions":"433"},{"ruleId":"423","severity":1,"message":"424","line":15,"column":32,"nodeType":"425","messageId":"426","endLine":15,"endColumn":35,"suggestions":"434"},{"ruleId":"423","severity":1,"message":"424","line":15,"column":43,"nodeType":"425","messageId":"426","endLine":15,"endColumn":46,"suggestions":"435"},{"ruleId":"436","severity":1,"message":"437","line":62,"column":9,"nodeType":"438","endLine":62,"endColumn":45},{"ruleId":"439","severity":1,"message":"440","line":62,"column":9,"nodeType":"438","endLine":62,"endColumn":45},{"ruleId":"441","severity":1,"message":"442","line":14,"column":26,"nodeType":"443","messageId":"444","endLine":14,"endColumn":44},{"ruleId":"436","severity":1,"message":"437","line":25,"column":15,"nodeType":"438","endLine":25,"endColumn":45},{"ruleId":"439","severity":1,"message":"440","line":25,"column":15,"nodeType":"438","endLine":25,"endColumn":45},{"ruleId":"436","severity":1,"message":"437","line":29,"column":15,"nodeType":"438","endLine":29,"endColumn":49},{"ruleId":"439","severity":1,"message":"440","line":29,"column":15,"nodeType":"438","endLine":29,"endColumn":49},{"ruleId":"441","severity":1,"message":"445","line":12,"column":8,"nodeType":"443","messageId":"444","endLine":12,"endColumn":14},{"ruleId":"441","severity":1,"message":"446","line":31,"column":10,"nodeType":"443","messageId":"444","endLine":31,"endColumn":18},{"ruleId":"447","severity":1,"message":"448","line":50,"column":6,"nodeType":"449","endLine":50,"endColumn":8,"suggestions":"450"},{"ruleId":"441","severity":1,"message":"451","line":2,"column":8,"nodeType":"443","messageId":"444","endLine":2,"endColumn":13},{"ruleId":"441","severity":1,"message":"452","line":7,"column":8,"nodeType":"443","messageId":"444","endLine":7,"endColumn":17},{"ruleId":"441","severity":1,"message":"453","line":20,"column":9,"nodeType":"443","messageId":"444","endLine":20,"endColumn":18},{"ruleId":"441","severity":1,"message":"454","line":21,"column":22,"nodeType":"443","messageId":"444","endLine":21,"endColumn":35},{"ruleId":"441","severity":1,"message":"455","line":58,"column":7,"nodeType":"443","messageId":"444","endLine":58,"endColumn":14},{"ruleId":"423","severity":1,"message":"424","line":17,"column":50,"nodeType":"425","messageId":"426","endLine":17,"endColumn":53,"suggestions":"456"},{"ruleId":"457","severity":1,"message":"458","line":16,"column":9,"nodeType":"438","endLine":16,"endColumn":68},{"ruleId":"457","severity":1,"message":"458","line":17,"column":9,"nodeType":"438","endLine":20,"endColumn":10},{"ruleId":"447","severity":1,"message":"459","line":26,"column":6,"nodeType":"449","endLine":26,"endColumn":8,"suggestions":"460"},{"ruleId":"423","severity":1,"message":"424","line":25,"column":22,"nodeType":"425","messageId":"426","endLine":25,"endColumn":25,"suggestions":"461"},{"ruleId":"423","severity":1,"message":"424","line":28,"column":20,"nodeType":"425","messageId":"426","endLine":28,"endColumn":23,"suggestions":"462"},{"ruleId":"441","severity":1,"message":"463","line":58,"column":7,"nodeType":"443","messageId":"444","endLine":58,"endColumn":14},{"ruleId":"441","severity":1,"message":"464","line":17,"column":23,"nodeType":"443","messageId":"444","endLine":17,"endColumn":37},{"ruleId":"441","severity":1,"message":"465","line":81,"column":47,"nodeType":"443","messageId":"444","endLine":81,"endColumn":58},{"ruleId":"441","severity":1,"message":"466","line":5,"column":8,"nodeType":"443","messageId":"444","endLine":5,"endColumn":16},{"ruleId":"441","severity":1,"message":"467","line":8,"column":10,"nodeType":"443","messageId":"444","endLine":8,"endColumn":25},{"ruleId":"423","severity":1,"message":"424","line":42,"column":22,"nodeType":"425","messageId":"426","endLine":42,"endColumn":25,"suggestions":"468"},{"ruleId":"423","severity":1,"message":"424","line":47,"column":20,"nodeType":"425","messageId":"426","endLine":47,"endColumn":23,"suggestions":"469"},{"ruleId":"423","severity":1,"message":"424","line":58,"column":22,"nodeType":"425","messageId":"426","endLine":58,"endColumn":25,"suggestions":"470"},{"ruleId":"423","severity":1,"message":"424","line":64,"column":20,"nodeType":"425","messageId":"426","endLine":64,"endColumn":23,"suggestions":"471"},{"ruleId":"441","severity":1,"message":"472","line":2,"column":21,"nodeType":"443","messageId":"444","endLine":2,"endColumn":28},{"ruleId":"441","severity":1,"message":"473","line":15,"column":36,"nodeType":"443","messageId":"444","endLine":15,"endColumn":46},{"ruleId":"441","severity":1,"message":"474","line":10,"column":9,"nodeType":"443","messageId":"444","endLine":10,"endColumn":15},{"ruleId":"423","severity":1,"message":"424","line":23,"column":40,"nodeType":"425","messageId":"426","endLine":23,"endColumn":43,"suggestions":"475"},{"ruleId":"441","severity":1,"message":"476","line":4,"column":19,"nodeType":"443","messageId":"444","endLine":4,"endColumn":31},{"ruleId":"423","severity":1,"message":"424","line":18,"column":22,"nodeType":"425","messageId":"426","endLine":18,"endColumn":25,"suggestions":"477"},{"ruleId":"423","severity":1,"message":"424","line":21,"column":20,"nodeType":"425","messageId":"426","endLine":21,"endColumn":23,"suggestions":"478"},{"ruleId":"441","severity":1,"message":"479","line":10,"column":17,"nodeType":"443","messageId":"444","endLine":10,"endColumn":26},{"ruleId":"423","severity":1,"message":"424","line":78,"column":24,"nodeType":"425","messageId":"426","endLine":78,"endColumn":27,"suggestions":"480"},{"ruleId":"436","severity":1,"message":"437","line":142,"column":13,"nodeType":"438","endLine":142,"endColumn":54},{"ruleId":"439","severity":1,"message":"440","line":142,"column":13,"nodeType":"438","endLine":142,"endColumn":54},{"ruleId":"441","severity":1,"message":"481","line":18,"column":10,"nodeType":"443","messageId":"444","endLine":18,"endColumn":18},{"ruleId":"447","severity":1,"message":"448","line":26,"column":6,"nodeType":"449","endLine":26,"endColumn":8,"suggestions":"482"},{"ruleId":"436","severity":1,"message":"437","line":39,"column":7,"nodeType":"438","endLine":47,"endColumn":9},{"ruleId":"439","severity":1,"message":"440","line":39,"column":7,"nodeType":"438","endLine":47,"endColumn":9},{"ruleId":"436","severity":1,"message":"437","line":50,"column":11,"nodeType":"438","endLine":50,"endColumn":45},{"ruleId":"439","severity":1,"message":"440","line":50,"column":11,"nodeType":"438","endLine":50,"endColumn":45},{"ruleId":"423","severity":1,"message":"424","line":17,"column":12,"nodeType":"425","messageId":"426","endLine":17,"endColumn":15,"suggestions":"483"},{"ruleId":"447","severity":1,"message":"484","line":29,"column":6,"nodeType":"449","endLine":29,"endColumn":22,"suggestions":"485"},{"ruleId":"423","severity":1,"message":"424","line":81,"column":31,"nodeType":"425","messageId":"426","endLine":81,"endColumn":34,"suggestions":"486"},{"ruleId":"447","severity":1,"message":"487","line":30,"column":6,"nodeType":"449","endLine":30,"endColumn":8,"suggestions":"488"},{"ruleId":"436","severity":1,"message":"437","line":11,"column":11,"nodeType":"438","endLine":11,"endColumn":45},{"ruleId":"439","severity":1,"message":"440","line":11,"column":11,"nodeType":"438","endLine":11,"endColumn":45},{"ruleId":"436","severity":1,"message":"437","line":17,"column":9,"nodeType":"438","endLine":17,"endColumn":49},{"ruleId":"439","severity":1,"message":"440","line":17,"column":9,"nodeType":"438","endLine":17,"endColumn":49},{"ruleId":"436","severity":1,"message":"437","line":36,"column":15,"nodeType":"438","endLine":36,"endColumn":37},{"ruleId":"439","severity":1,"message":"440","line":36,"column":15,"nodeType":"438","endLine":36,"endColumn":37},{"ruleId":"436","severity":1,"message":"437","line":39,"column":15,"nodeType":"438","endLine":39,"endColumn":41},{"ruleId":"439","severity":1,"message":"440","line":39,"column":15,"nodeType":"438","endLine":39,"endColumn":41},{"ruleId":"436","severity":1,"message":"437","line":42,"column":15,"nodeType":"438","endLine":42,"endColumn":38},{"ruleId":"439","severity":1,"message":"440","line":42,"column":15,"nodeType":"438","endLine":42,"endColumn":38},{"ruleId":"441","severity":1,"message":"451","line":1,"column":8,"nodeType":"443","messageId":"444","endLine":1,"endColumn":13},{"ruleId":"441","severity":1,"message":"479","line":3,"column":10,"nodeType":"443","messageId":"444","endLine":3,"endColumn":19},{"ruleId":"441","severity":1,"message":"489","line":6,"column":8,"nodeType":"443","messageId":"444","endLine":6,"endColumn":15},{"ruleId":"441","severity":1,"message":"474","line":10,"column":9,"nodeType":"443","messageId":"444","endLine":10,"endColumn":15},{"ruleId":"441","severity":1,"message":"490","line":15,"column":10,"nodeType":"443","messageId":"444","endLine":15,"endColumn":15},{"ruleId":"441","severity":1,"message":"491","line":15,"column":17,"nodeType":"443","messageId":"444","endLine":15,"endColumn":25},{"ruleId":"441","severity":1,"message":"492","line":53,"column":7,"nodeType":"443","messageId":"444","endLine":53,"endColumn":14},{"ruleId":"441","severity":1,"message":"493","line":58,"column":7,"nodeType":"443","messageId":"444","endLine":58,"endColumn":14},{"ruleId":"441","severity":1,"message":"494","line":61,"column":7,"nodeType":"443","messageId":"444","endLine":61,"endColumn":17},{"ruleId":"441","severity":1,"message":"495","line":73,"column":7,"nodeType":"443","messageId":"444","endLine":73,"endColumn":14},{"ruleId":"441","severity":1,"message":"496","line":78,"column":7,"nodeType":"443","messageId":"444","endLine":78,"endColumn":13},{"ruleId":"441","severity":1,"message":"497","line":83,"column":7,"nodeType":"443","messageId":"444","endLine":83,"endColumn":16},{"ruleId":"441","severity":1,"message":"451","line":3,"column":8,"nodeType":"443","messageId":"444","endLine":3,"endColumn":13},{"ruleId":"441","severity":1,"message":"498","line":23,"column":46,"nodeType":"443","messageId":"444","endLine":23,"endColumn":48},{"ruleId":"441","severity":1,"message":"499","line":24,"column":10,"nodeType":"443","messageId":"444","endLine":24,"endColumn":19},{"ruleId":"441","severity":1,"message":"500","line":24,"column":21,"nodeType":"443","messageId":"444","endLine":24,"endColumn":33},{"ruleId":"447","severity":1,"message":"501","line":21,"column":6,"nodeType":"449","endLine":21,"endColumn":8,"suggestions":"502"},{"ruleId":"441","severity":1,"message":"503","line":63,"column":7,"nodeType":"443","messageId":"444","endLine":63,"endColumn":12},{"ruleId":"441","severity":1,"message":"504","line":2,"column":10,"nodeType":"443","messageId":"444","endLine":2,"endColumn":21},{"ruleId":"441","severity":1,"message":"505","line":12,"column":9,"nodeType":"443","messageId":"444","endLine":12,"endColumn":13},{"ruleId":"423","severity":1,"message":"424","line":21,"column":22,"nodeType":"425","messageId":"426","endLine":21,"endColumn":25,"suggestions":"506"},{"ruleId":"423","severity":1,"message":"424","line":24,"column":20,"nodeType":"425","messageId":"426","endLine":24,"endColumn":23,"suggestions":"507"},{"ruleId":"423","severity":1,"message":"424","line":39,"column":22,"nodeType":"425","messageId":"426","endLine":39,"endColumn":25,"suggestions":"508"},{"ruleId":"423","severity":1,"message":"424","line":51,"column":22,"nodeType":"425","messageId":"426","endLine":51,"endColumn":25,"suggestions":"509"},{"ruleId":"447","severity":1,"message":"510","line":75,"column":6,"nodeType":"449","endLine":75,"endColumn":13,"suggestions":"511"},{"ruleId":"423","severity":1,"message":"424","line":27,"column":27,"nodeType":"425","messageId":"426","endLine":27,"endColumn":30,"suggestions":"512"},{"ruleId":"423","severity":1,"message":"424","line":45,"column":33,"nodeType":"425","messageId":"426","endLine":45,"endColumn":36,"suggestions":"513"},{"ruleId":"441","severity":1,"message":"514","line":37,"column":32,"nodeType":"443","messageId":"444","endLine":37,"endColumn":38},{"ruleId":"441","severity":1,"message":"514","line":105,"column":32,"nodeType":"443","messageId":"444","endLine":105,"endColumn":38},"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment",["515"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["516","517"],["518","519"],["520","521"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["522","523"],["524","525"],["526","527"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","@typescript-eslint/no-unused-vars","'review' is defined but never used.","Identifier","unusedVar","'Review' is defined but never used.","'visitArr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'router' and 'userAtom.id'. Either include them or remove the dependency array.","ArrayExpression",["528"],"'axios' is defined but never used.","'StoreList' is defined but never used.","'colorList' is assigned a value but never used.","'setReviewRank' is assigned a value but never used.","'RankNum' is assigned a value but never used.",["529","530"],"@next/next/no-sync-scripts","Synchronous scripts should not be used. See: https://nextjs.org/docs/messages/no-sync-scripts","React Hook useEffect has missing dependencies: 'location.x', 'location.y', and 'setMapLocation'. Either include them or remove the dependency array.",["531"],["532","533"],["534","535"],"'MoreBtn' is assigned a value but never used.","'setSerachEvent' is assigned a value but never used.","'idx' is defined but never used.","'MenuInfo' is defined but never used.","'StrapiStoreType' is defined but never used.",["536","537"],["538","539"],["540","541"],["542","543"],"'Wrapper' is defined but never used.","'isStoreImg' is defined but never used.","'router' is assigned a value but never used.",["544","545"],"'useAtomValue' is defined but never used.",["546","547"],["548","549"],"'useEffect' is defined but never used.",["550","551"],"'storeArr' is assigned a value but never used.",["552"],["553","554"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["555"],["556","557"],"React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["558"],"'StarCmp' is defined but never used.","'store' is assigned a value but never used.","'setStore' is assigned a value but never used.","'Wrapper' is assigned a value but never used.","'Content' is assigned a value but never used.","'ImgWrapper' is assigned a value but never used.","'DateBox' is assigned a value but never used.","'Button' is assigned a value but never used.","'ReviewCmp' is assigned a value but never used.","'id' is defined but never used.","'storeInfo' is assigned a value but never used.","'setStoreInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'storeInfo.id'. Either include it or remove the dependency array.",["559"],"'Block' is assigned a value but never used.","'useMutation' is defined but never used.","'user' is assigned a value but never used.",["560","561"],["562","563"],["564","565"],["566","567"],"React Hook useEffect has a missing dependency: 'getKakaoToken'. Either include it or remove the dependency array.",["568"],["569","570"],["571","572"],"'reject' is defined but never used.",{"kind":"573","justification":"574"},{"messageId":"575","fix":"576","desc":"577"},{"messageId":"578","fix":"579","desc":"580"},{"messageId":"575","fix":"581","desc":"577"},{"messageId":"578","fix":"582","desc":"580"},{"messageId":"575","fix":"583","desc":"577"},{"messageId":"578","fix":"584","desc":"580"},{"messageId":"575","fix":"585","desc":"577"},{"messageId":"578","fix":"586","desc":"580"},{"messageId":"575","fix":"587","desc":"577"},{"messageId":"578","fix":"588","desc":"580"},{"messageId":"575","fix":"589","desc":"577"},{"messageId":"578","fix":"590","desc":"580"},{"desc":"591","fix":"592"},{"messageId":"575","fix":"593","desc":"577"},{"messageId":"578","fix":"594","desc":"580"},{"desc":"595","fix":"596"},{"messageId":"575","fix":"597","desc":"577"},{"messageId":"578","fix":"598","desc":"580"},{"messageId":"575","fix":"599","desc":"577"},{"messageId":"578","fix":"600","desc":"580"},{"messageId":"575","fix":"601","desc":"577"},{"messageId":"578","fix":"602","desc":"580"},{"messageId":"575","fix":"603","desc":"577"},{"messageId":"578","fix":"604","desc":"580"},{"messageId":"575","fix":"605","desc":"577"},{"messageId":"578","fix":"606","desc":"580"},{"messageId":"575","fix":"607","desc":"577"},{"messageId":"578","fix":"608","desc":"580"},{"messageId":"575","fix":"609","desc":"577"},{"messageId":"578","fix":"610","desc":"580"},{"messageId":"575","fix":"611","desc":"577"},{"messageId":"578","fix":"612","desc":"580"},{"messageId":"575","fix":"613","desc":"577"},{"messageId":"578","fix":"614","desc":"580"},{"messageId":"575","fix":"615","desc":"577"},{"messageId":"578","fix":"616","desc":"580"},{"desc":"591","fix":"617"},{"messageId":"575","fix":"618","desc":"577"},{"messageId":"578","fix":"619","desc":"580"},{"desc":"620","fix":"621"},{"messageId":"575","fix":"622","desc":"577"},{"messageId":"578","fix":"623","desc":"580"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"messageId":"575","fix":"628","desc":"577"},{"messageId":"578","fix":"629","desc":"580"},{"messageId":"575","fix":"630","desc":"577"},{"messageId":"578","fix":"631","desc":"580"},{"messageId":"575","fix":"632","desc":"577"},{"messageId":"578","fix":"633","desc":"580"},{"messageId":"575","fix":"634","desc":"577"},{"messageId":"578","fix":"635","desc":"580"},{"desc":"636","fix":"637"},{"messageId":"575","fix":"638","desc":"577"},{"messageId":"578","fix":"639","desc":"580"},{"messageId":"575","fix":"640","desc":"577"},{"messageId":"578","fix":"641","desc":"580"},"directive","","suggestUnknown",{"range":"642","text":"643"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"642","text":"644"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"645","text":"643"},{"range":"645","text":"644"},{"range":"646","text":"643"},{"range":"646","text":"644"},{"range":"647","text":"643"},{"range":"647","text":"644"},{"range":"648","text":"643"},{"range":"648","text":"644"},{"range":"649","text":"643"},{"range":"649","text":"644"},"Update the dependencies array to be: [router, userAtom.id]",{"range":"650","text":"651"},{"range":"652","text":"643"},{"range":"652","text":"644"},"Update the dependencies array to be: [location.x, location.y, setMapLocation]",{"range":"653","text":"654"},{"range":"655","text":"643"},{"range":"655","text":"644"},{"range":"656","text":"643"},{"range":"656","text":"644"},{"range":"657","text":"643"},{"range":"657","text":"644"},{"range":"658","text":"643"},{"range":"658","text":"644"},{"range":"659","text":"643"},{"range":"659","text":"644"},{"range":"660","text":"643"},{"range":"660","text":"644"},{"range":"661","text":"643"},{"range":"661","text":"644"},{"range":"662","text":"643"},{"range":"662","text":"644"},{"range":"663","text":"643"},{"range":"663","text":"644"},{"range":"664","text":"643"},{"range":"664","text":"644"},{"range":"665","text":"651"},{"range":"666","text":"643"},{"range":"666","text":"644"},"Update the dependencies array to be: [loc, map, markerArr]",{"range":"667","text":"668"},{"range":"669","text":"643"},{"range":"669","text":"644"},"Update the dependencies array to be: [handleScroll]",{"range":"670","text":"671"},"Update the dependencies array to be: [storeInfo.id]",{"range":"672","text":"673"},{"range":"674","text":"643"},{"range":"674","text":"644"},{"range":"675","text":"643"},{"range":"675","text":"644"},{"range":"676","text":"643"},{"range":"676","text":"644"},{"range":"677","text":"643"},{"range":"677","text":"644"},"Update the dependencies array to be: [getKakaoToken, query]",{"range":"678","text":"679"},{"range":"680","text":"643"},{"range":"680","text":"644"},{"range":"681","text":"643"},{"range":"681","text":"644"},[360,363],"unknown","never",[1214,1217],[959,962],[426,429],[441,444],[452,455],[1697,1699],"[router, userAtom.id]",[714,717],[706,708],"[location.x, location.y, setMapLocation]",[920,923],[985,988],[984,987],[1072,1075],[1342,1345],[1461,1464],[752,755],[756,759],[849,852],[2433,2436],[985,987],[613,616],[884,900],"[loc, map, markerArr]",[2386,2389],[745,747],"[handleScroll]",[688,690],"[storeInfo.id]",[718,721],[788,791],[1266,1269],[1573,1576],[2120,2127],"[getKakaoToken, query]",[837,840],[1011,1014]]